/* tslint:disable */
/* eslint-disable */
/**
 * NIUM Platform
 * NIUM Platform
 *
 * The version of the OpenAPI document: 2024.8.20
 * Contact: experience@nium.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


// May contain unused imports in some cases
// @ts-ignore
import type { Document } from './document';

/**
 * 
 * @export
 * @interface DocumentDetail
 */
export interface DocumentDetail {
    /**
     * An object that contains the document copy.
     * @type {Array<Document>}
     * @memberof DocumentDetail
     */
    'document'?: Array<Document>;
    /**
     * 
     * @type {string}
     * @memberof DocumentDetail
     */
    'documentColor'?: string;
    /**
     * The date the document expires in the `YYYY-MM-DD` format. This is required if `documentType` is `PASSPORT` or `DRIVERS_LICENSE`.
     * @type {string}
     * @memberof DocumentDetail
     */
    'documentExpiryDate'?: string;
    /**
     * 
     * @type {string}
     * @memberof DocumentDetail
     */
    'documentHolderName'?: string;
    /**
     * The country that issued the business document. Use [Fetch corporate constants](ref:fetchcorporateconstantsusingget) API  for a valid set of values.
     * @type {string}
     * @memberof DocumentDetail
     */
    'documentIssuanceCountry'?: string;
    /**
     * 
     * @type {string}
     * @memberof DocumentDetail
     */
    'documentIssuanceState'?: string;
    /**
     * 
     * @type {string}
     * @memberof DocumentDetail
     */
    'documentIssuedDate'?: string;
    /**
     * 
     * @type {string}
     * @memberof DocumentDetail
     */
    'documentIssuingAuthority'?: string;
    /**
     * ID number for the given `documentType`.
     * @type {string}
     * @memberof DocumentDetail
     */
    'documentNumber'?: string;
    /**
     * 
     * @type {string}
     * @memberof DocumentDetail
     */
    'documentReferenceNumber'?: string;
    /**
     * The type of the document. Use [Fetch corporate constants](ref:fetchcorporateconstantsusingget) API for a valid set of values.
     * @type {string}
     * @memberof DocumentDetail
     */
    'documentType'?: string;
}

