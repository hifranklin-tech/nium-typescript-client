/* tslint:disable */
/* eslint-disable */
/**
 * NIUM Platform
 * NIUM Platform
 *
 * The version of the OpenAPI document: 2024.8.20
 * Contact: experience@nium.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



/**
 * Card details
 * @export
 * @interface CardInfo
 */
export interface CardInfo {
    /**
     * Pre-defined product Id, defined at NIUM and communicated to client for card issuance.
     * @type {string}
     * @memberof CardInfo
     */
    'cardProductId'?: string;
    /**
     * This field contains the pre-defined plastic Id which is used to determine card design.
     * @type {string}
     * @memberof CardInfo
     */
    'plasticId'?: string;
    /**
     * This field contains the 2-letter [region code](doc:currency-and-country-codes) for the card.
     * @type {string}
     * @memberof CardInfo
     */
    'regionCode'?: string;
    /**
     * This field contains the 16-digit masked card number in format 1234-56xx-xxxx-3456.
     * @type {string}
     * @memberof CardInfo
     */
    'maskedCardNumber'?: string;
    /**
     * This field contains the reference number for the card.
     * @type {string}
     * @memberof CardInfo
     */
    'proxyNumber'?: string;
    /**
     * This field contains the issued card type.
     * @type {string}
     * @memberof CardInfo
     */
    'cardType'?: string;
    /**
     * This field contains the type of the card issued.
     * @type {string}
     * @memberof CardInfo
     */
    'issuanceType'?: string;
    /**
     * This field contains the activation status of the card.
     * @type {string}
     * @memberof CardInfo
     */
    'cardStatus'?: CardInfoCardStatusEnum;
    /**
     * This field refers to a unique identifier, known as customerHashId, assigned to an individual customer who is associated with a corporate customer at the parent level. This identifier serves the purpose of distinguishing and tracking the child-level customer within a given client\'s program. By utilizing this identifier, it becomes possible to establish and maintain the appropriate linkage between the child customer and their parent corporate customer, ensuring accurate association and management of customer data.
     * @type {string}
     * @memberof CardInfo
     */
    'childCustomerHashId'?: string;
}

export const CardInfoCardStatusEnum = {
    InactiveactivevirtualActivetempBlockpBlock: 'INACTIVE,ACTIVE,VIRTUAL_ACTIVE,TEMP_BLOCK,P_BLOCK'
} as const;

export type CardInfoCardStatusEnum = typeof CardInfoCardStatusEnum[keyof typeof CardInfoCardStatusEnum];


