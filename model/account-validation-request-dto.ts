/* tslint:disable */
/* eslint-disable */
/**
 * NIUM Platform
 * NIUM Platform
 *
 * The version of the OpenAPI document: 2023.12.12
 * Contact: experience@nium.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


// May contain unused imports in some cases
// @ts-ignore
import { BankRoutingInfo } from './bank-routing-info';
// May contain unused imports in some cases
// @ts-ignore
import { BeneficiaryAccountDetailsDTO } from './beneficiary-account-details-dto';

/**
 * 
 * @export
 * @interface AccountValidationRequestDTO
 */
export interface AccountValidationRequestDTO {
    /**
     * This field accepts an account number which is to be verified.
     * @type {string}
     * @memberof AccountValidationRequestDTO
     */
    'accountNumber'?: string;
    /**
     * This field accepts the type of account.
     * @type {string}
     * @memberof AccountValidationRequestDTO
     */
    'bankAccountType': AccountValidationRequestDTOBankAccountTypeEnum;
    /**
     * This field accepts the bank code of a beneficiary, for example, bank code for Pakistan will be BHK. Note: This field is mandatory when the destination country is Pakistan (PK).
     * @type {string}
     * @memberof AccountValidationRequestDTO
     */
    'bankCode'?: string;
    /**
     * 
     * @type {BeneficiaryAccountDetailsDTO}
     * @memberof AccountValidationRequestDTO
     */
    'beneficiary'?: BeneficiaryAccountDetailsDTO;
    /**
     * This field accepts the 2-letter [ISO-2 country code](https://docs.nium.com/apis/docs/currency-and-country-codes) of the destination country.
     * @type {string}
     * @memberof AccountValidationRequestDTO
     */
    'destinationCountry'?: string;
    /**
     * This field accepts the 3-letter ISO-3 currency code of the bank account.
     * @type {string}
     * @memberof AccountValidationRequestDTO
     */
    'destinationCurrency': string;
    /**
     * This field can accept the different modes of payout.
     * @type {string}
     * @memberof AccountValidationRequestDTO
     */
    'payoutMethod': AccountValidationRequestDTOPayoutMethodEnum;
    /**
     * This field indicates the proxy type sent in the payment request.  For SGD-PayNow: The proxy type can be MOBILE, UEN , or NRIC For INR-UPI: The proxy type should be VPA  For MYR-DuitNow: The proxy type can be NRIC, PASSPORT, CORPORATE_REGISTRATION_NUMBER, MOBILE, or ARMY_ID Note : This field is mandatory when the payoutMethod type is PROXY.
     * @type {string}
     * @memberof AccountValidationRequestDTO
     */
    'proxyType'?: string;
    /**
     * This field indicates the proxy value such as VPA, UEN, or mobile number etc. Note: This field is mandatory when the payoutMethod type is PROXY The mobile number should include country code.
     * @type {string}
     * @memberof AccountValidationRequestDTO
     */
    'proxyValue'?: string;
    /**
     * 
     * @type {Array<BankRoutingInfo>}
     * @memberof AccountValidationRequestDTO
     */
    'routingInfo'?: Array<BankRoutingInfo>;
}

export const AccountValidationRequestDTOBankAccountTypeEnum = {
    Checking: 'CHECKING',
    Saving: 'SAVING',
    Maestra: 'MAESTRA',
    Current: 'CURRENT'
} as const;

export type AccountValidationRequestDTOBankAccountTypeEnum = typeof AccountValidationRequestDTOBankAccountTypeEnum[keyof typeof AccountValidationRequestDTOBankAccountTypeEnum];
export const AccountValidationRequestDTOPayoutMethodEnum = {
    Card: 'CARD',
    Wallet: 'WALLET',
    Cash: 'CASH',
    Swift: 'SWIFT',
    Local: 'LOCAL',
    Proxy: 'PROXY',
    Fedwire: 'FEDWIRE'
} as const;

export type AccountValidationRequestDTOPayoutMethodEnum = typeof AccountValidationRequestDTOPayoutMethodEnum[keyof typeof AccountValidationRequestDTOPayoutMethodEnum];


