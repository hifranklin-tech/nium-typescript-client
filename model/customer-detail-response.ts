/* tslint:disable */
/* eslint-disable */
/**
 * NIUM Platform
 * NIUM Platform
 *
 * The version of the OpenAPI document: 2023.12.12
 * Contact: experience@nium.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


// May contain unused imports in some cases
// @ts-ignore
import { BusinessDetailsResponseDTO } from './business-details-response-dto';
// May contain unused imports in some cases
// @ts-ignore
import { BusinessPartnerDetailsResponseDTO } from './business-partner-details-response-dto';
// May contain unused imports in some cases
// @ts-ignore
import { CustomerRfiDetailsResponse } from './customer-rfi-details-response';
// May contain unused imports in some cases
// @ts-ignore
import { CustomerTaxDetailDTO } from './customer-tax-detail-dto';
// May contain unused imports in some cases
// @ts-ignore
import { PaymentIdDTO } from './payment-id-dto';
// May contain unused imports in some cases
// @ts-ignore
import { ProfessionalDetails } from './professional-details';
// May contain unused imports in some cases
// @ts-ignore
import { RiskAssessmentInfoResponseDTO } from './risk-assessment-info-response-dto';
// May contain unused imports in some cases
// @ts-ignore
import { StakeholderDetailsResponseDTO } from './stakeholder-details-response-dto';

/**
 * 
 * @export
 * @interface CustomerDetailResponse
 */
export interface CustomerDetailResponse {
    /**
     * This object contains the user defined key-value pairs provided by the client.
     * @type {{ [key: string]: string; }}
     * @memberof CustomerDetailResponse
     */
    'tags'?: { [key: string]: string; };
    /**
     * This field contains the line 1 of customer’s [INDIVIDUAL] or applicant’s [CORPORATE] billing address, which is used for KYC.
     * @type {string}
     * @memberof CustomerDetailResponse
     */
    'billingAddress1'?: string;
    /**
     * This field contains the line 2 of customer’s [INDIVIDUAL] or applicant’s [CORPORATE] billing address, if provided during customer onboarding. Otherwise, it contains null.
     * @type {string}
     * @memberof CustomerDetailResponse
     */
    'billingAddress2'?: string;
    /**
     * This field contains the city of customer’s [INDIVIDUAL] or applicant’s [CORPORATE] billing address.
     * @type {string}
     * @memberof CustomerDetailResponse
     */
    'billingCity'?: string;
    /**
     * This field contains the 2-letter [ISO Alpha-2 country code](doc:currency-and-country-codes) of customer’s [INDIVIDUAL] or applicant’s [CORPORATE] billing address, if provided during customer onboarding. Otherwise, it contains null.
     * @type {string}
     * @memberof CustomerDetailResponse
     */
    'billingCountry'?: string;
    /**
     * This field contains the landmark for customer’s [INDIVIDUAL] or applicant’s [CORPORATE] billing address, if provided during customer onboarding. Otherwise, it contains null.
     * @type {string}
     * @memberof CustomerDetailResponse
     */
    'billingLandmark'?: string;
    /**
     * This field contains the state of customer’s [INDIVIDUAL] or applicant’s [CORPORATE] billing address, if provided during customer onboarding. Otherwise, it contains null.
     * @type {string}
     * @memberof CustomerDetailResponse
     */
    'billingState'?: string;
    /**
     * This field contains the zip code of customer’s [INDIVIDUAL] or applicant’s [CORPORATE] billing address.
     * @type {string}
     * @memberof CustomerDetailResponse
     */
    'billingZipCode'?: string;
    /**
     * This field contains the comment entered while blocking the customer, if applicable. Otherwise, it contains null.
     * @type {string}
     * @memberof CustomerDetailResponse
     */
    'blockComment'?: string;
    /**
     * This field contains the reason for blocking the customer, if applicable. Otherwise, it contains null.
     * @type {string}
     * @memberof CustomerDetailResponse
     */
    'blockReason'?: CustomerDetailResponseBlockReasonEnum;
    /**
     * This field contains the details of the entity updating a customer block/unblock, if applicable. Otherwise, it contains null. The possible values are CLIENT or NIUM.
     * @type {string}
     * @memberof CustomerDetailResponse
     */
    'blockUpdatedBy'?: CustomerDetailResponseBlockUpdatedByEnum;
    /**
     * 
     * @type {BusinessDetailsResponseDTO}
     * @memberof CustomerDetailResponse
     */
    'businessDetails'?: BusinessDetailsResponseDTO;
    /**
     * 
     * @type {Array<BusinessPartnerDetailsResponseDTO>}
     * @memberof CustomerDetailResponse
     */
    'businessPartner'?: Array<BusinessPartnerDetailsResponseDTO>;
    /**
     * This field contains the compliance level for the customer. The possible values for customer type INDIVIDUAL are: SCREENING_KYC, SCREENING, SCREENING_KYB. The possible values for customer type CORPORATE is SCREENING_KYB.
     * @type {string}
     * @memberof CustomerDetailResponse
     */
    'complianceLevel'?: string;
    /**
     * This field contains the compliance remarks from Compliance officer, if applicable.
     * @type {string}
     * @memberof CustomerDetailResponse
     */
    'complianceRemarks'?: string;
    /**
     * This field contains the overall compliance status of the customer.
     * @type {string}
     * @memberof CustomerDetailResponse
     */
    'complianceStatus'?: CustomerDetailResponseComplianceStatusEnum;
    /**
     * This field contains the 2-letter [ISO-2 country code](doc:currency-and-country-codes) for identifying the country prefix to the customer’s mobile number.
     * @type {string}
     * @memberof CustomerDetailResponse
     */
    'countryCode'?: string;
    /**
     * This field contains the 2-letter [ISO Alpha-2 country code](doc:currency-and-country-codes) denoting the customer’s country of birth.
     * @type {string}
     * @memberof CustomerDetailResponse
     */
    'countryOfBirth'?: string;
    /**
     * This field contains the timestamp of customer creation in the format YYY-MM-DD hh:mm:ss, for example, 2021-07-29 06:11:43.
     * @type {string}
     * @memberof CustomerDetailResponse
     */
    'createdAt'?: string;
    /**
     * This field contains the unique customer identifier generated at the time of customer creation.
     * @type {string}
     * @memberof CustomerDetailResponse
     */
    'customerHashId'?: string;
    /**
     * This field contains an internal NIUM customer identifier. This field shall be deprecated in future.
     * @type {number}
     * @memberof CustomerDetailResponse
     */
    'customerId'?: number;
    /**
     * This field contains the customer type which is either <B>INDIVIDUAL</B> or <B>CORPORATE</B> and this depends on customer onboarding flows.
     * @type {string}
     * @memberof CustomerDetailResponse
     */
    'customerType'?: CustomerDetailResponseCustomerTypeEnum;
    /**
     * This field contains the date of birth of the customer [INDIVIDUAL] or applicant [CORPORATE] in YYYY-MM-DD format.
     * @type {string}
     * @memberof CustomerDetailResponse
     */
    'dateOfBirth'?: string;
    /**
     * This field contains the line 1 of customer [INDIVIDUAL] or applicant [CORPORATE] delivery address. It is used for card delivery.
     * @type {string}
     * @memberof CustomerDetailResponse
     */
    'deliveryAddress1'?: string;
    /**
     * This field contains the line 2 of customer’s [INDIVIDUAL] or applicant’s [CORPORATE] delivery address, if provided during customer onboarding. It is used for card delivery. Otherwise, it contains null.
     * @type {string}
     * @memberof CustomerDetailResponse
     */
    'deliveryAddress2'?: string;
    /**
     * This field contains the city of customer’s [INDIVIDUAL] or applicant’s [CORPORATE] delivery address.
     * @type {string}
     * @memberof CustomerDetailResponse
     */
    'deliveryCity'?: string;
    /**
     * This field contains the 2-letter [ISO Alpha-2 country code](doc:currency-and-country-codes) of customer’s [INDIVIDUAL] or applicant’s [CORPORATE] delivery address, if provided during customer onboarding. Otherwise, it contains null.
     * @type {string}
     * @memberof CustomerDetailResponse
     */
    'deliveryCountry'?: string;
    /**
     * This field contains the landmark for customer’s [INDIVIDUAL] or applicant’s [CORPORATE] delivery address, if provided during customer onboarding. Otherwise, it contains null.
     * @type {string}
     * @memberof CustomerDetailResponse
     */
    'deliveryLandmark'?: string;
    /**
     * This field contains the state of customer’s [INDIVIDUAL] or applicant’s [CORPORATE] delivery address, if provided during customer onboarding. Otherwise, it contains null.
     * @type {string}
     * @memberof CustomerDetailResponse
     */
    'deliveryState'?: string;
    /**
     * This field contains the zip code of customer’s [INDIVIDUAL] or applicant’s [CORPORATE] delivery address.
     * @type {string}
     * @memberof CustomerDetailResponse
     */
    'deliveryZipCode'?: string;
    /**
     * This field contains the designation of an employee, if provided during customer onboarding. Otherwise, it contains null.
     * @type {string}
     * @memberof CustomerDetailResponse
     */
    'designation'?: string;
    /**
     * This field contains the unique email address of the customer.
     * @type {string}
     * @memberof CustomerDetailResponse
     */
    'email'?: string;
    /**
     * This field contains the employee ID of an employee, if provided during customer onboarding. Otherwise, it contains null.
     * @type {string}
     * @memberof CustomerDetailResponse
     */
    'employeeId'?: string;
    /**
     * This field contains the estimated monthly funding amount expected in the wallet. This field is required when estimatedMonthlyFundingCurrency field is provided in the request.
     * @type {string}
     * @memberof CustomerDetailResponse
     */
    'estimatedMonthlyFunding'?: CustomerDetailResponseEstimatedMonthlyFundingEnum;
    /**
     * This field contains the 3-letter [ISO-4217 currency code](doc:currency-and-country-codes) in which estimated monthly funding is expected in the wallet, for example, SGD.
     * @type {string}
     * @memberof CustomerDetailResponse
     */
    'estimatedMonthlyFundingCurrency'?: string;
    /**
     * This is an array of 2-letter [ISO Alpha-2 country code](doc:currency-and-country-codes) to allow the client to capture the expected countries to send/receive international payments from. This field is required when internationalPaymentsSupported field is true, for example, [“FR”, “DE”].
     * @type {Array<string>}
     * @memberof CustomerDetailResponse
     */
    'expectedCountriesToSendReceiveFrom'?: Array<string>;
    /**
     * This field contains the first name of the customer [INDIVIDUAL] or applicant [CORPORATE].
     * @type {string}
     * @memberof CustomerDetailResponse
     */
    'firstName'?: string;
    /**
     * This field contains the gender of the customer [INDIVIDUAL] or applicant [CORPORATE], if provided during customer onboarding. The possible values are - Male, Female, or Others. Otherwise, it contains null.
     * @type {string}
     * @memberof CustomerDetailResponse
     */
    'gender'?: string;
    /**
     * This array contains objects consisting of type and value of each uploaded document.
     * @type {Array<{ [key: string]: string; }>}
     * @memberof CustomerDetailResponse
     */
    'identificationData'?: Array<{ [key: string]: string; }>;
    /**
     * This array contains the list of identification used during KYC. Otherwise, it contains null.
     * @type {Array<string>}
     * @memberof CustomerDetailResponse
     */
    'identificationTypes'?: Array<string>;
    /**
     * This flag contains the customer’s intended use of account.
     * @type {string}
     * @memberof CustomerDetailResponse
     */
    'intendedUseOfAccount'?: string;
    /**
     * This field indicates if the customer will be doing International send/receive payments. The default value will be false.
     * @type {boolean}
     * @memberof CustomerDetailResponse
     */
    'internationalPaymentsSupported'?: boolean;
    /**
     * This field contains the kyc mode  The possible values for customer type INDIVIDUAL are: E_KYC, MANUAL_KYC, SCREENING, EVERIFY_KYC, or NONE.  The possible values for customer type CORPORATE are: KYB or NONE.
     * @type {string}
     * @memberof CustomerDetailResponse
     */
    'kycMode'?: string;
    /**
     * This field contains the last name of the customer [INDIVIDUAL] or applicant [CORPORATE].
     * @type {string}
     * @memberof CustomerDetailResponse
     */
    'lastName'?: string;
    /**
     * This field contains the middle name of the customer [INDIVIDUAL] or applicant [CORPORATE], if provided. Otherwise, it contains null.
     * @type {string}
     * @memberof CustomerDetailResponse
     */
    'middleName'?: string;
    /**
     * This field contains the mobile number of the customer--digits only--without the country code.
     * @type {string}
     * @memberof CustomerDetailResponse
     */
    'mobile'?: string;
    /**
     * This field contains the 2-letter [ISO Alpha-2 country code](doc:currency-and-country-codes) denoting the customer [INDIVIDUAL] or applicant [CORPORATE] citizenship.
     * @type {string}
     * @memberof CustomerDetailResponse
     */
    'nationality'?: string;
    /**
     * This field contains the name of the customer in native language, if provided during customer onboarding. Otherwise, it contains null
     * @type {string}
     * @memberof CustomerDetailResponse
     */
    'nativeLanguageName'?: string;
    /**
     * This field contains the unique payment Ids assigned to the customer.
     * @type {Array<PaymentIdDTO>}
     * @memberof CustomerDetailResponse
     */
    'paymentIds'?: Array<PaymentIdDTO>;
    /**
     * This flag indicates if a customer is a Politically Exposed Person (PEP) or not.
     * @type {boolean}
     * @memberof CustomerDetailResponse
     */
    'pep'?: boolean;
    /**
     * This field contains the preferred name of the customer[INDIVIDUAL] or business name [CORPORATE].
     * @type {string}
     * @memberof CustomerDetailResponse
     */
    'preferredName'?: string;
    /**
     * This array contains the applicant\'s professional details information
     * @type {Array<ProfessionalDetails>}
     * @memberof CustomerDetailResponse
     */
    'professionalDetails'?: Array<ProfessionalDetails>;
    /**
     * This field contains the  applicant\'s reference id
     * @type {string}
     * @memberof CustomerDetailResponse
     */
    'referenceId'?: string;
    /**
     * This field contains the regulatory region of the customer.
     * @type {string}
     * @memberof CustomerDetailResponse
     */
    'regulatoryRegion'?: CustomerDetailResponseRegulatoryRegionEnum;
    /**
     * This field contains any system-generated compliance comments, if applicable.
     * @type {string}
     * @memberof CustomerDetailResponse
     */
    'remarks'?: string;
    /**
     * This array contains the details of RFI, if raised. Otherwise, it contains null.
     * @type {Array<CustomerRfiDetailsResponse>}
     * @memberof CustomerDetailResponse
     */
    'rfiDetails'?: Array<CustomerRfiDetailsResponse>;
    /**
     * 
     * @type {RiskAssessmentInfoResponseDTO}
     * @memberof CustomerDetailResponse
     */
    'riskAssessmentInfo'?: RiskAssessmentInfoResponseDTO;
    /**
     * This field contains the fee segment applicable to the customer. Otherwise, it contains null.
     * @type {string}
     * @memberof CustomerDetailResponse
     */
    'segment'?: string;
    /**
     * This is an array object may contain the stakeholder details in certain client onboarding flows. It is null for individual customer onboarding flows.
     * @type {Array<StakeholderDetailsResponseDTO>}
     * @memberof CustomerDetailResponse
     */
    'stakeholderDetails'?: Array<StakeholderDetailsResponseDTO>;
    /**
     * This field contains the overall KYC status of the customer
     * @type {string}
     * @memberof CustomerDetailResponse
     */
    'status'?: CustomerDetailResponseStatusEnum;
    /**
     * This array contains tax details provided during compliance onboarding for EU customers. Otherwise, it contains null.
     * @type {Array<CustomerTaxDetailDTO>}
     * @memberof CustomerDetailResponse
     */
    'taxDetails'?: Array<CustomerTaxDetailDTO>;
    /**
     * This flag denotes that the customer has accepted the Terms and Conditions.
     * @type {boolean}
     * @memberof CustomerDetailResponse
     */
    'termsAndConditionAcceptanceFlag'?: boolean;
    /**
     * This name that the customer has accepted the Terms and Conditions.
     * @type {string}
     * @memberof CustomerDetailResponse
     */
    'termsAndConditionName'?: string;
    /**
     * This version that the customer has accepted the Terms and Conditions.
     * @type {string}
     * @memberof CustomerDetailResponse
     */
    'termsAndConditionVersionId'?: string;
    /**
     * This field contains the timestamp of last customer updation in the format YYY-MM-DD hh:mm:ss, for example, 2021-07-29 06:11:43.
     * @type {string}
     * @memberof CustomerDetailResponse
     */
    'updatedAt'?: string;
    /**
     * This flag contain the customer consent to proceed in case e-Document verification flow is initiated.
     * @type {boolean}
     * @memberof CustomerDetailResponse
     */
    'verificationConsent'?: boolean;
    /**
     * This field contains the unique wallet identifier generated simultaneously with customer creation.
     * @type {string}
     * @memberof CustomerDetailResponse
     */
    'walletHashId'?: string;
}

export const CustomerDetailResponseBlockReasonEnum = {
    CustomerRequest: 'CUSTOMER_REQUEST',
    ClientRequest: 'CLIENT_REQUEST',
    Deceased: 'DECEASED',
    AccountClosure: 'ACCOUNT_CLOSURE',
    SuspiciousActivity: 'SUSPICIOUS_ACTIVITY',
    FraudulentActivity: 'FRAUDULENT_ACTIVITY',
    PotentialSanction: 'POTENTIAL_SANCTION',
    SanctionedCustomer: 'SANCTIONED_CUSTOMER'
} as const;

export type CustomerDetailResponseBlockReasonEnum = typeof CustomerDetailResponseBlockReasonEnum[keyof typeof CustomerDetailResponseBlockReasonEnum];
export const CustomerDetailResponseBlockUpdatedByEnum = {
    Nium: 'NIUM',
    Client: 'CLIENT'
} as const;

export type CustomerDetailResponseBlockUpdatedByEnum = typeof CustomerDetailResponseBlockUpdatedByEnum[keyof typeof CustomerDetailResponseBlockUpdatedByEnum];
export const CustomerDetailResponseComplianceStatusEnum = {
    Initiated: 'INITIATED',
    InProgress: 'IN_PROGRESS',
    ActionRequired: 'ACTION_REQUIRED',
    RfiRequested: 'RFI_REQUESTED',
    Completed: 'COMPLETED',
    Reject: 'REJECT',
    Error: 'ERROR',
    Expired: 'EXPIRED',
    Closed: 'CLOSED'
} as const;

export type CustomerDetailResponseComplianceStatusEnum = typeof CustomerDetailResponseComplianceStatusEnum[keyof typeof CustomerDetailResponseComplianceStatusEnum];
export const CustomerDetailResponseCustomerTypeEnum = {
    Individual: 'INDIVIDUAL',
    Corporate: 'CORPORATE'
} as const;

export type CustomerDetailResponseCustomerTypeEnum = typeof CustomerDetailResponseCustomerTypeEnum[keyof typeof CustomerDetailResponseCustomerTypeEnum];
export const CustomerDetailResponseEstimatedMonthlyFundingEnum = {
    _1000: '<1000',
    _10005000: '1000-5000',
    _500110000: '5001-10000',
    _1000120000: '10001-20000',
    _20000: '>20000'
} as const;

export type CustomerDetailResponseEstimatedMonthlyFundingEnum = typeof CustomerDetailResponseEstimatedMonthlyFundingEnum[keyof typeof CustomerDetailResponseEstimatedMonthlyFundingEnum];
export const CustomerDetailResponseRegulatoryRegionEnum = {
    Sg: 'SG',
    Eu: 'EU',
    Au: 'AU',
    Hk: 'HK',
    Uk: 'UK'
} as const;

export type CustomerDetailResponseRegulatoryRegionEnum = typeof CustomerDetailResponseRegulatoryRegionEnum[keyof typeof CustomerDetailResponseRegulatoryRegionEnum];
export const CustomerDetailResponseStatusEnum = {
    Pending: 'Pending',
    Clear: 'Clear',
    Failed: 'Failed',
    Suspended: 'Suspended',
    Blocked: 'Blocked'
} as const;

export type CustomerDetailResponseStatusEnum = typeof CustomerDetailResponseStatusEnum[keyof typeof CustomerDetailResponseStatusEnum];


