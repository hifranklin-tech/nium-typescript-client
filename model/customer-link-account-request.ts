/* tslint:disable */
/* eslint-disable */
/**
 * NIUM Platform
 * NIUM Platform
 *
 * The version of the OpenAPI document: 2023.12.12
 * Contact: experience@nium.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


// May contain unused imports in some cases
// @ts-ignore
import { RoutingInfo } from './routing-info';

/**
 * 
 * @export
 * @interface CustomerLinkAccountRequest
 */
export interface CustomerLinkAccountRequest {
    /**
     * This field accepts the customer account number or IBAN.
     * @type {string}
     * @memberof CustomerLinkAccountRequest
     */
    'accountNumber'?: string;
    /**
     * This field accepts the [2-letter ISO-2 country code](doc:currency-and-country-codes) where the bank account resides.
     * @type {string}
     * @memberof CustomerLinkAccountRequest
     */
    'country': string;
    /**
     * This field accepts the 3-letter [ISO-4217 currency code](doc:currency-and-country-codes) for the linked account.
     * @type {string}
     * @memberof CustomerLinkAccountRequest
     */
    'currency': string;
    /**
     * This field indicates the mode of funding a wallet. Adding a new funding instrument is only supported for direct debit.
     * @type {string}
     * @memberof CustomerLinkAccountRequest
     */
    'fundingChannel': CustomerLinkAccountRequestFundingChannelEnum;
    /**
     * This field accepts the List of routing code type and value.
     * @type {Array<RoutingInfo>}
     * @memberof CustomerLinkAccountRequest
     */
    'routingCodes'?: Array<RoutingInfo>;
}

export const CustomerLinkAccountRequestFundingChannelEnum = {
    DirectDebit: 'DIRECT_DEBIT'
} as const;

export type CustomerLinkAccountRequestFundingChannelEnum = typeof CustomerLinkAccountRequestFundingChannelEnum[keyof typeof CustomerLinkAccountRequestFundingChannelEnum];


