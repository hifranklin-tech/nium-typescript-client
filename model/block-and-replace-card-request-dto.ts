/* tslint:disable */
/* eslint-disable */
/**
 * NIUM Platform
 * NIUM Platform
 *
 * The version of the OpenAPI document: 2023.12.12
 * Contact: experience@nium.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


// May contain unused imports in some cases
// @ts-ignore
import { Address } from './address';

/**
 * A card can be blocked and replaced using the Block And Replace Card API
 * @export
 * @interface BlockAndReplaceCardRequestDTO
 */
export interface BlockAndReplaceCardRequestDTO {
    /**
     * This field accepts the reason for card block. The possible values are: fraud lost stolen damaged
     * @type {string}
     * @memberof BlockAndReplaceCardRequestDTO
     */
    'reason': BlockAndReplaceCardRequestDTOReasonEnum;
    /**
     * A Flag that specifies whether to replace card or not
     * @type {boolean}
     * @memberof BlockAndReplaceCardRequestDTO
     */
    'replaceCard': boolean;
    /**
     * Pre-defined plastic Id defined at NIUM and communicated to client. It is used to determine the card design
     * @type {string}
     * @memberof BlockAndReplaceCardRequestDTO
     */
    'plasticId'?: string;
    /**
     * The expiry date is applicable only for Virtual cards and not applicable for physical cards. This field is in MMYY format. For Virtual cards, the expiry date can be a maximum of 5 years from when the API is used.
     * @type {string}
     * @memberof BlockAndReplaceCardRequestDTO
     */
    'cardExpiry'?: string;
    /**
     * Boolean \"useCurrentAddress\" specifies whether to use existing address in the system or new address passed in address object
     * @type {boolean}
     * @memberof BlockAndReplaceCardRequestDTO
     */
    'useCurrentAddress'?: boolean;
    /**
     * 
     * @type {Address}
     * @memberof BlockAndReplaceCardRequestDTO
     */
    'delivery'?: Address;
    /**
     * Card holder Email
     * @type {string}
     * @memberof BlockAndReplaceCardRequestDTO
     */
    'email'?: string;
    /**
     * Country is two-letter ISO2 country code for mobile
     * @type {string}
     * @memberof BlockAndReplaceCardRequestDTO
     */
    'countryCode'?: string;
    /**
     * Mobile field is where the recipient\'s mobile phone number. This field is mandatory when useBillingAddress is true
     * @type {string}
     * @memberof BlockAndReplaceCardRequestDTO
     */
    'mobile'?: string;
}

export const BlockAndReplaceCardRequestDTOReasonEnum = {
    FraudLostStolenDamaged: 'fraud, lost, stolen, damaged'
} as const;

export type BlockAndReplaceCardRequestDTOReasonEnum = typeof BlockAndReplaceCardRequestDTOReasonEnum[keyof typeof BlockAndReplaceCardRequestDTOReasonEnum];


