/* tslint:disable */
/* eslint-disable */
/**
 * NIUM Platform
 * NIUM Platform
 *
 * The version of the OpenAPI document: 2024.8.20
 * Contact: experience@nium.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


// May contain unused imports in some cases
// @ts-ignore
import type { CorporateCustomerResponseDTO } from './corporate-customer-response-dto';
// May contain unused imports in some cases
// @ts-ignore
import type { CustomerAccountDetail } from './customer-account-detail';
// May contain unused imports in some cases
// @ts-ignore
import type { IndividualCustomerResponseDTO } from './individual-customer-response-dto';

/**
 * 
 * @export
 * @interface CustomerDetailsResponseV2DTO
 */
export interface CustomerDetailsResponseV2DTO {
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof CustomerDetailsResponseV2DTO
     */
    'tags'?: { [key: string]: string; };
    /**
     * 
     * @type {Array<CustomerAccountDetail>}
     * @memberof CustomerDetailsResponseV2DTO
     */
    'accountDetails'?: Array<CustomerAccountDetail>;
    /**
     * This field contains the comment entered while blocking the customer, if applicable. Otherwise, it contains null.
     * @type {string}
     * @memberof CustomerDetailsResponseV2DTO
     */
    'blockComment'?: string;
    /**
     * This field contains the reason for blocking the customer, if applicable. Otherwise, it contains null.
     * @type {string}
     * @memberof CustomerDetailsResponseV2DTO
     */
    'blockReason'?: CustomerDetailsResponseV2DTOBlockReasonEnum;
    /**
     * This field contains the details of the entity updating a customer block/unblock, if applicable. Otherwise, it contains null. The possible values are CLIENT or NIUM.
     * @type {string}
     * @memberof CustomerDetailsResponseV2DTO
     */
    'blockUpdatedBy'?: CustomerDetailsResponseV2DTOBlockUpdatedByEnum;
    /**
     * This field contains the compliance level for the customer. The possible values for customer type INDIVIDUAL are: SCREENING_KYC, SCREENING, SCREENING_KYB. The possible values for customer type CORPORATE is SCREENING_KYB.
     * @type {string}
     * @memberof CustomerDetailsResponseV2DTO
     */
    'complianceLevel'?: string;
    /**
     * This field contains the compliance remarks from Compliance officer, if applicable.
     * @type {string}
     * @memberof CustomerDetailsResponseV2DTO
     */
    'complianceRemarks'?: string;
    /**
     * 
     * @type {string}
     * @memberof CustomerDetailsResponseV2DTO
     */
    'complianceStatus'?: string;
    /**
     * 
     * @type {CorporateCustomerResponseDTO}
     * @memberof CustomerDetailsResponseV2DTO
     */
    'corporateCustomer'?: CorporateCustomerResponseDTO;
    /**
     * This field contains the timestamp of customer creation in the format YYY-MM-DD hh:mm:ss, for example, 2021-07-29 06:11:43.
     * @type {string}
     * @memberof CustomerDetailsResponseV2DTO
     */
    'createdAt'?: string;
    /**
     * 
     * @type {string}
     * @memberof CustomerDetailsResponseV2DTO
     */
    'customerHashId'?: string;
    /**
     * 
     * @type {string}
     * @memberof CustomerDetailsResponseV2DTO
     */
    'customerType'?: CustomerDetailsResponseV2DTOCustomerTypeEnum;
    /**
     * 
     * @type {IndividualCustomerResponseDTO}
     * @memberof CustomerDetailsResponseV2DTO
     */
    'individualCustomer'?: IndividualCustomerResponseDTO;
    /**
     * This field contains the kyc mode  The possible values for customer type INDIVIDUAL are: E_KYC, MANUAL_KYC, SCREENING, EVERIFY_KYC, or NONE.  The possible values for customer type CORPORATE are: KYB or NONE.
     * @type {string}
     * @memberof CustomerDetailsResponseV2DTO
     */
    'kycMode'?: string;
    /**
     * This field contains any system-generated compliance comments, if applicable.
     * @type {string}
     * @memberof CustomerDetailsResponseV2DTO
     */
    'remarks'?: string;
    /**
     * 
     * @type {string}
     * @memberof CustomerDetailsResponseV2DTO
     */
    'segment'?: string;
    /**
     * This field contains the overall KYC status of the customer
     * @type {string}
     * @memberof CustomerDetailsResponseV2DTO
     */
    'status'?: CustomerDetailsResponseV2DTOStatusEnum;
    /**
     * This flag denotes that the customer has accepted the Terms and Conditions.
     * @type {boolean}
     * @memberof CustomerDetailsResponseV2DTO
     */
    'termsAndConditionAcceptanceFlag'?: boolean;
    /**
     * This name that the customer has accepted the Terms and Conditions.
     * @type {string}
     * @memberof CustomerDetailsResponseV2DTO
     */
    'termsAndConditionName'?: string;
    /**
     * This version that the customer has accepted the Terms and Conditions.
     * @type {string}
     * @memberof CustomerDetailsResponseV2DTO
     */
    'termsAndConditionVersionId'?: string;
    /**
     * This field contains the timestamp of last customer updation in the format YYY-MM-DD hh:mm:ss, for example, 2021-07-29 06:11:43.
     * @type {string}
     * @memberof CustomerDetailsResponseV2DTO
     */
    'updatedAt'?: string;
    /**
     * This flag contain the customer consent to proceed in case e-Document verification flow is initiated.
     * @type {boolean}
     * @memberof CustomerDetailsResponseV2DTO
     */
    'verificationConsent'?: boolean;
}

export const CustomerDetailsResponseV2DTOBlockReasonEnum = {
    CustomerRequest: 'CUSTOMER_REQUEST',
    ClientRequest: 'CLIENT_REQUEST',
    Deceased: 'DECEASED',
    AccountClosure: 'ACCOUNT_CLOSURE',
    SuspiciousActivity: 'SUSPICIOUS_ACTIVITY',
    FraudulentActivity: 'FRAUDULENT_ACTIVITY',
    PotentialSanction: 'POTENTIAL_SANCTION',
    SanctionedCustomer: 'SANCTIONED_CUSTOMER'
} as const;

export type CustomerDetailsResponseV2DTOBlockReasonEnum = typeof CustomerDetailsResponseV2DTOBlockReasonEnum[keyof typeof CustomerDetailsResponseV2DTOBlockReasonEnum];
export const CustomerDetailsResponseV2DTOBlockUpdatedByEnum = {
    Nium: 'NIUM',
    Client: 'CLIENT'
} as const;

export type CustomerDetailsResponseV2DTOBlockUpdatedByEnum = typeof CustomerDetailsResponseV2DTOBlockUpdatedByEnum[keyof typeof CustomerDetailsResponseV2DTOBlockUpdatedByEnum];
export const CustomerDetailsResponseV2DTOCustomerTypeEnum = {
    Individual: 'INDIVIDUAL',
    Corporate: 'CORPORATE'
} as const;

export type CustomerDetailsResponseV2DTOCustomerTypeEnum = typeof CustomerDetailsResponseV2DTOCustomerTypeEnum[keyof typeof CustomerDetailsResponseV2DTOCustomerTypeEnum];
export const CustomerDetailsResponseV2DTOStatusEnum = {
    Pending: 'Pending',
    Clear: 'Clear',
    Failed: 'Failed',
    Suspended: 'Suspended',
    Blocked: 'Blocked'
} as const;

export type CustomerDetailsResponseV2DTOStatusEnum = typeof CustomerDetailsResponseV2DTOStatusEnum[keyof typeof CustomerDetailsResponseV2DTOStatusEnum];


