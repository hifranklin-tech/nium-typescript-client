/* tslint:disable */
/* eslint-disable */
/**
 * NIUM Platform
 * NIUM Platform
 *
 * The version of the OpenAPI document: 2023.12.12
 * Contact: experience@nium.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



/**
 * 
 * @export
 * @interface PaymentIdsDTO
 */
export interface PaymentIdsDTO {
    /**
     * This field contains the name of the account.
     * @type {string}
     * @memberof PaymentIdsDTO
     */
    'accountName'?: string;
    /**
     * This field contains the type of an account.
     * @type {string}
     * @memberof PaymentIdsDTO
     */
    'accountType'?: PaymentIdsDTOAccountTypeEnum;
    /**
     * This field contains the full address of the bank.
     * @type {string}
     * @memberof PaymentIdsDTO
     */
    'bankAddress'?: string;
    /**
     * This field contains the bank name.The possible values are:
     * @type {string}
     * @memberof PaymentIdsDTO
     */
    'bankName'?: PaymentIdsDTOBankNameEnum;
    /**
     * This field contains the full name of the bank.
     * @type {string}
     * @memberof PaymentIdsDTO
     */
    'bankNameFull'?: string;
    /**
     * This field contains the 3-letter [ISO-4217 currency code](doc:currency-and-country-codes).
     * @type {string}
     * @memberof PaymentIdsDTO
     */
    'currencyCode'?: string;
    /**
     * This field contains the routing code type 1.
     * @type {string}
     * @memberof PaymentIdsDTO
     */
    'routingCodeType1'?: string;
    /**
     * This field contains the routing code type 2.
     * @type {string}
     * @memberof PaymentIdsDTO
     */
    'routingCodeType2'?: string;
    /**
     * This field contains the routing code type 1 value.
     * @type {string}
     * @memberof PaymentIdsDTO
     */
    'routingCodeValue1'?: string;
    /**
     * This field contains the routing code type 2 value.
     * @type {string}
     * @memberof PaymentIdsDTO
     */
    'routingCodeValue2'?: string;
    /**
     * This is a unique email Id provided to the customer in addition to uniquePaymentId for supported regions and configuration, or else it will be null, for example, abc12_ca@nium.com.
     * @type {string}
     * @memberof PaymentIdsDTO
     */
    'uniquePayerId'?: string;
    /**
     * This field is the virtual account number per currency provided to customers for supported regions and configuration, for example, IBAN in EU, virtual account number from Moonova in AU, or else, it will be null.
     * @type {string}
     * @memberof PaymentIdsDTO
     */
    'uniquePaymentId'?: string;
}

export const PaymentIdsDTOAccountTypeEnum = {
    Local: 'LOCAL',
    Global: 'GLOBAL',
    Localglobal: 'LOCAL+GLOBAL'
} as const;

export type PaymentIdsDTOAccountTypeEnum = typeof PaymentIdsDTOAccountTypeEnum[keyof typeof PaymentIdsDTOAccountTypeEnum];
export const PaymentIdsDTOBankNameEnum = {
    BolLt: 'BOL_LT',
    MonoovaAu: 'MONOOVA_AU',
    DbsHk: 'DBS_HK',
    DbsSg: 'DBS_SG',
    JpmAu: 'JPM_AU',
    JpmSg: 'JPM_SG',
    CbGb: 'CB_GB',
    CfsbUs: 'CFSB_US'
} as const;

export type PaymentIdsDTOBankNameEnum = typeof PaymentIdsDTOBankNameEnum[keyof typeof PaymentIdsDTOBankNameEnum];


