/* tslint:disable */
/* eslint-disable */
/**
 * NIUM Platform
 * NIUM Platform
 *
 * The version of the OpenAPI document: 2024.8.20
 * Contact: experience@nium.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



/**
 * 
 * @export
 * @interface AddCardRequestV2
 */
export interface AddCardRequestV2 {
    /**
     * Pre-defined product Id, defined at NIUM and communicated to client for card issuance.
     * @type {string}
     * @memberof AddCardRequestV2
     */
    'cardProductId': string;
    /**
     * This field accepts the card type to be issued. The acceptable values are: \" + \"PHY: This value is used to issue a physical card \" + \"VIR: This value is used to issue a virtual card \" + \"VIRUP2PHY: This value is used to issue a virtual upgrade to physical card
     * @type {string}
     * @memberof AddCardRequestV2
     */
    'cardType': AddCardRequestV2CardTypeEnum;
    /**
     * This field can be used to print the customer name. The value sent in this field will be printed on the card.If this field is left empty, line 1 will not be printed on the card. This field accepts alphanumeric characters along with space(s) The maximum character limit is 26.
     * @type {string}
     * @memberof AddCardRequestV2
     */
    'nameOnCard'?: string;
    /**
     * This field can be used to send the company name or employeeID. Anything sent in this field will be printed on the card.  This field accepts alphanumeric characters along with space(s). The maximum character limit is 26.
     * @type {string}
     * @memberof AddCardRequestV2
     */
    'additionalLine'?: string;
    /**
     * Email of the card holder.
     * @type {string}
     * @memberof AddCardRequestV2
     */
    'email'?: string;
    /**
     * This field refers to a unique identifier, known as customerHashId, assigned to an individual customer who is associated with a corporate customer at the parent level. This identifier serves the purpose of distinguishing and tracking the child-level customer within a given client\'s program. By utilizing this identifier, it becomes possible to establish and maintain the appropriate linkage between the child customer and their parent corporate customer, ensuring accurate association and management of customer data.
     * @type {string}
     * @memberof AddCardRequestV2
     */
    'childCustomerHashId'?: string;
    /**
     * Country code of recipient\'s phone number accepted in [2-letter ISO Alpha-2 country code](doc:currency-and-country-codes).
     * @type {string}
     * @memberof AddCardRequestV2
     */
    'countryCode'?: string;
    /**
     * Mobile field is where the recipient\'s mobile phone number.
     * @type {string}
     * @memberof AddCardRequestV2
     */
    'mobile'?: string;
    /**
     * This field is only required for physical cards(PHY) mode of delivery of a card. Possible values are: NORMAL_DELIVERY_LOCAL EXPRESS_DELIVERY_LOCAL INTERNATIONAL_DELIVERY
     * @type {string}
     * @memberof AddCardRequestV2
     */
    'issuanceMode'?: AddCardRequestV2IssuanceModeEnum;
    /**
     * Pre-defined plastic Id defined at NIUM and communicated to client. It is used to determine the card design
     * @type {string}
     * @memberof AddCardRequestV2
     */
    'plasticId': string;
}

export const AddCardRequestV2CardTypeEnum = {
    Phy: 'PHY',
    Vir: 'VIR',
    Virup2Phy: 'VIRUP2PHY'
} as const;

export type AddCardRequestV2CardTypeEnum = typeof AddCardRequestV2CardTypeEnum[keyof typeof AddCardRequestV2CardTypeEnum];
export const AddCardRequestV2IssuanceModeEnum = {
    NormalDeliveryLocal: 'NORMAL_DELIVERY_LOCAL',
    BulkIssueLocal: 'BULK_ISSUE_LOCAL',
    BulkIssueInternationalAu: 'BULK_ISSUE_INTERNATIONAL_AU',
    BulkIssueInternationalEu: 'BULK_ISSUE_INTERNATIONAL_EU',
    ExpressDeliveryLocal: 'EXPRESS_DELIVERY_LOCAL',
    InternationalDelivery: 'INTERNATIONAL_DELIVERY'
} as const;

export type AddCardRequestV2IssuanceModeEnum = typeof AddCardRequestV2IssuanceModeEnum[keyof typeof AddCardRequestV2IssuanceModeEnum];


