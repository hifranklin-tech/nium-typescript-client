/* tslint:disable */
/* eslint-disable */
/**
 * NIUM Platform
 * NIUM Platform
 *
 * The version of the OpenAPI document: 2024.8.20
 * Contact: experience@nium.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



/**
 * 
 * @export
 * @interface WalletFundingInstrumentsResponseDTO
 */
export interface WalletFundingInstrumentsResponseDTO {
    /**
     * The name of the bank that issued the account associated with the funding instrument.
     * @type {string}
     * @memberof WalletFundingInstrumentsResponseDTO
     */
    'bankName'?: string;
    /**
     * The name of the bank that issued the card associated with the funding instrument.
     * @type {string}
     * @memberof WalletFundingInstrumentsResponseDTO
     */
    'cardBankName'?: string;
    /**
     * The payment network the provided card uses. At this time we support Visa and MasterCard.
     * @type {string}
     * @memberof WalletFundingInstrumentsResponseDTO
     */
    'cardNetwork'?: string;
    /**
     * The type of card being used. Available values include **credit** and **debit**.
     * @type {string}
     * @memberof WalletFundingInstrumentsResponseDTO
     */
    'cardType'?: string;
    /**
     * The unique 36-character client identifier generated and shared before the API handshake.
     * @type {string}
     * @memberof WalletFundingInstrumentsResponseDTO
     */
    'clientHashId'?: string;
    /**
     * The country the card or account was originally opened in.
     * @type {string}
     * @memberof WalletFundingInstrumentsResponseDTO
     */
    'country'?: string;
    /**
     * A timestamp detailing when the funding instrument got added. Retunred in a YYYY-MM-DD hh:mm:ss format.
     * @type {string}
     * @memberof WalletFundingInstrumentsResponseDTO
     */
    'createdAt'?: string;
    /**
     * This currency the submitted the card or account uses.
     * @type {string}
     * @memberof WalletFundingInstrumentsResponseDTO
     */
    'currency'?: string;
    /**
     * The unique 36-character customer identifier generated and shared before the API handshake.
     * @type {string}
     * @memberof WalletFundingInstrumentsResponseDTO
     */
    'customerHashId'?: string;
    /**
     * The funding channel of the funding instrument.
     * @type {string}
     * @memberof WalletFundingInstrumentsResponseDTO
     */
    'fundingChannel'?: WalletFundingInstrumentsResponseDTOFundingChannelEnum;
    /**
     * The unique 36-character funding instrument identifier.
     * @type {string}
     * @memberof WalletFundingInstrumentsResponseDTO
     */
    'fundingInstrumentId'?: string;
    /**
     * The 16-digit card number in a masked format: 1234-56xx-xxxx-3456.
     * @type {string}
     * @memberof WalletFundingInstrumentsResponseDTO
     */
    'maskCardNumber'?: string;
    /**
     * The account number in a masked format where only the blast 4 digits are visible.
     * @type {string}
     * @memberof WalletFundingInstrumentsResponseDTO
     */
    'maskedAccountNumber'?: string;
    /**
     * The routing type.
     * @type {string}
     * @memberof WalletFundingInstrumentsResponseDTO
     */
    'routingType'?: string;
    /**
     * The routing value.
     * @type {string}
     * @memberof WalletFundingInstrumentsResponseDTO
     */
    'routingValue'?: string;
    /**
     * Details if the the funding instrument is saved for future funding transfers. or not.
     * @type {boolean}
     * @memberof WalletFundingInstrumentsResponseDTO
     */
    'saved'?: boolean;
    /**
     * The status of the funding instrument.
     * @type {string}
     * @memberof WalletFundingInstrumentsResponseDTO
     */
    'status'?: WalletFundingInstrumentsResponseDTOStatusEnum;
    /**
     * Details if the funding instrument supports 3DS verification.
     * @type {boolean}
     * @memberof WalletFundingInstrumentsResponseDTO
     */
    'threeDSecureUsage'?: boolean;
    /**
     * A timestamp detailing when the funding instrument was last updated. Retunred in a YYYY-MM-DD hh:mm:ss format.
     * @type {string}
     * @memberof WalletFundingInstrumentsResponseDTO
     */
    'updatedAt'?: string;
    /**
     * This field contains the unique 36-character wallet identifier generated and shared before API handshake.
     * @type {string}
     * @memberof WalletFundingInstrumentsResponseDTO
     */
    'walletHashId'?: string;
}

export const WalletFundingInstrumentsResponseDTOFundingChannelEnum = {
    DirectDebit: 'DIRECT_DEBIT'
} as const;

export type WalletFundingInstrumentsResponseDTOFundingChannelEnum = typeof WalletFundingInstrumentsResponseDTOFundingChannelEnum[keyof typeof WalletFundingInstrumentsResponseDTOFundingChannelEnum];
export const WalletFundingInstrumentsResponseDTOStatusEnum = {
    Active: 'ACTIVE',
    Inactive: 'INACTIVE',
    Blocked: 'BLOCKED',
    Suspended: 'SUSPENDED',
    Uploaded: 'UPLOADED',
    Approved: 'APPROVED',
    Rejected: 'REJECTED',
    Failed: 'FAILED',
    Success: 'SUCCESS',
    Failure: 'FAILURE',
    PartiallySuccess: 'PARTIALLY SUCCESS',
    Sync: 'SYNC',
    NotSync: 'NOT SYNC',
    Pending: 'PENDING',
    RequiresAction: 'REQUIRES_ACTION',
    Clear: 'CLEAR',
    Declined: 'DECLINED',
    AccountBlocked: 'ACCOUNT_BLOCKED',
    AmountBlocked: 'AMOUNT_BLOCKED',
    DeLinked: 'DE_LINKED',
    Cancelled: 'CANCELLED',
    Linked: 'LINKED'
} as const;

export type WalletFundingInstrumentsResponseDTOStatusEnum = typeof WalletFundingInstrumentsResponseDTOStatusEnum[keyof typeof WalletFundingInstrumentsResponseDTOStatusEnum];


