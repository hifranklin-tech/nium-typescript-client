/**
 * NIUM Platform
 * NIUM Platform
 *
 * OpenAPI spec version: 2023.12.12
 * Contact: experience@nium.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

export class TransactionLimitDTO {
    /**
    * This field contains the threshold percentage which is calculated on the value as a threshold or margin which is to be allowed for authorization when a transaction exceeds the specified limits. The format is Decimal(3,4).
    */
    'additionalPercentage': number;
    /**
    * This field contains the timestamp of limit generation.
    */
    'createdAt'?: Date;
    /**
    * This is the 16-digit masked card number in format 1234-56xx-xxxx-3456.
    */
    'maskedCardNumber'?: string;
    /**
    * This field defines whether a particular limit is active or not. It can accept one of the two values: Active or Inactive.
    */
    'status': TransactionLimitDTOStatusEnum;
    /**
    * This field accepts the limit type to be set. It can take the following values: PER_TRANSACTION_AMOUNT_LIMIT DAILY_AMOUNT_LIMIT MONTHLY_AMOUNT_LIMIT LIFETIME_AMOUNT_LIMIT LIFETIME_COUNT_LIMIT TRANSACTION_DURATION_LIMIT
    */
    'type': TransactionLimitDTOTypeEnum;
    /**
    * This field contains the timestamp of limit updation.
    */
    'updatedAt'?: Date;
    /**
    * This field accepts the values for each card-level limits. It accepts a date range in the yyyymmdd-yyyymmdd format and UTC +00 time zone as a string when type is TRANSACTION_DURATION_LIMIT. Otherwise, it accepts the limit value.
    */
    'value': string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "additionalPercentage",
            "baseName": "additionalPercentage",
            "type": "number",
            "format": "double"
        },
        {
            "name": "createdAt",
            "baseName": "createdAt",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "maskedCardNumber",
            "baseName": "maskedCardNumber",
            "type": "string",
            "format": ""
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "TransactionLimitDTOStatusEnum",
            "format": ""
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "TransactionLimitDTOTypeEnum",
            "format": ""
        },
        {
            "name": "updatedAt",
            "baseName": "updatedAt",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "value",
            "baseName": "value",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return TransactionLimitDTO.attributeTypeMap;
    }

    public constructor() {
    }
}


export enum TransactionLimitDTOStatusEnum {
    Active = 'Active',
    Inactive = 'Inactive'
}
export enum TransactionLimitDTOTypeEnum {
    PerTransactionAmountLimit = 'PER_TRANSACTION_AMOUNT_LIMIT',
    DailyAmountLimit = 'DAILY_AMOUNT_LIMIT',
    MonthlyAmountLimit = 'MONTHLY_AMOUNT_LIMIT',
    LifetimeAmountLimit = 'LIFETIME_AMOUNT_LIMIT',
    LifetimeCountLimit = 'LIFETIME_COUNT_LIMIT',
    TransactionDurationLimit = 'TRANSACTION_DURATION_LIMIT'
}

