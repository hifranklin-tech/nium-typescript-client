/**
 * NIUM Platform
 * NIUM Platform
 *
 * OpenAPI spec version: 2023.12.12
 * Contact: experience@nium.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Address } from '../models/Address';
import { HttpFile } from '../http/http';

/**
* A card can be blocked and replaced using the Block And Replace Card API
*/
export class BlockAndReplaceCardRequestDTO {
    /**
    * This field accepts the reason for card block. The possible values are: fraud lost stolen damaged
    */
    'reason': BlockAndReplaceCardRequestDTOReasonEnum;
    /**
    * A Flag that specifies whether to replace card or not
    */
    'replaceCard': boolean;
    /**
    * Pre-defined plastic Id defined at NIUM and communicated to client. It is used to determine the card design
    */
    'plasticId'?: string;
    /**
    * The expiry date is applicable only for Virtual cards and not applicable for physical cards. This field is in MMYY format. For Virtual cards, the expiry date can be a maximum of 5 years from when the API is used.
    */
    'cardExpiry'?: string;
    /**
    * Boolean \"useCurrentAddress\" specifies whether to use existing address in the system or new address passed in address object
    */
    'useCurrentAddress'?: boolean;
    'delivery'?: Address;
    /**
    * Card holder Email
    */
    'email'?: string;
    /**
    * Country is two-letter ISO2 country code for mobile
    */
    'countryCode'?: string;
    /**
    * Mobile field is where the recipient\'s mobile phone number. This field is mandatory when useBillingAddress is true
    */
    'mobile'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "reason",
            "baseName": "reason",
            "type": "BlockAndReplaceCardRequestDTOReasonEnum",
            "format": ""
        },
        {
            "name": "replaceCard",
            "baseName": "replaceCard",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "plasticId",
            "baseName": "plasticId",
            "type": "string",
            "format": ""
        },
        {
            "name": "cardExpiry",
            "baseName": "cardExpiry",
            "type": "string",
            "format": ""
        },
        {
            "name": "useCurrentAddress",
            "baseName": "useCurrentAddress",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "delivery",
            "baseName": "delivery",
            "type": "Address",
            "format": ""
        },
        {
            "name": "email",
            "baseName": "email",
            "type": "string",
            "format": ""
        },
        {
            "name": "countryCode",
            "baseName": "countryCode",
            "type": "string",
            "format": ""
        },
        {
            "name": "mobile",
            "baseName": "mobile",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return BlockAndReplaceCardRequestDTO.attributeTypeMap;
    }

    public constructor() {
    }
}


export enum BlockAndReplaceCardRequestDTOReasonEnum {
    FraudLostStolenDamaged = 'fraud, lost, stolen, damaged'
}

