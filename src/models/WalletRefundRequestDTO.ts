/**
 * NIUM Platform
 * NIUM Platform
 *
 * OpenAPI spec version: 2023.12.12
 * Contact: experience@nium.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

export class WalletRefundRequestDTO {
    /**
    * This field is needed in case of BANK_TRANSFER to specify the account holder name.
    */
    'accountName'?: string;
    /**
    * This field is needed in case of BANK_TRANSFER to specify the account number of the receiver.
    */
    'accountNumber'?: string;
    /**
    * An amount to be transferred.
    */
    'amount': number;
    /**
    * This field is needed in case of BANK_TRANSFER to specify the bank code for the receiver.
    */
    'bankCode'?: string;
    /**
    * This field is needed in case of BANK_TRANSFER to specify the bank name for the receiver.
    */
    'bankName'?: string;
    /**
    * This field is for an instruction or a message to support personnel.
    */
    'comments'?: string;
    /**
    * This field contains the 3-letter [ISO-4217 currency code](doc:currency-and-country-codes) for the amount
    */
    'currencyCode': string;
    /**
    * This is the name of the pocket defined under base currency.
    */
    'pocketName'?: string;
    /**
    * The mode of refund. CASH is the only allowed mode of refund for this request.
    */
    'refundMode': WalletRefundRequestDTORefundModeEnum;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "accountName",
            "baseName": "accountName",
            "type": "string",
            "format": ""
        },
        {
            "name": "accountNumber",
            "baseName": "accountNumber",
            "type": "string",
            "format": ""
        },
        {
            "name": "amount",
            "baseName": "amount",
            "type": "number",
            "format": "double"
        },
        {
            "name": "bankCode",
            "baseName": "bankCode",
            "type": "string",
            "format": ""
        },
        {
            "name": "bankName",
            "baseName": "bankName",
            "type": "string",
            "format": ""
        },
        {
            "name": "comments",
            "baseName": "comments",
            "type": "string",
            "format": ""
        },
        {
            "name": "currencyCode",
            "baseName": "currencyCode",
            "type": "string",
            "format": ""
        },
        {
            "name": "pocketName",
            "baseName": "pocketName",
            "type": "string",
            "format": ""
        },
        {
            "name": "refundMode",
            "baseName": "refundMode",
            "type": "WalletRefundRequestDTORefundModeEnum",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return WalletRefundRequestDTO.attributeTypeMap;
    }

    public constructor() {
    }
}


export enum WalletRefundRequestDTORefundModeEnum {
    Cash = 'CASH',
    BankTransfer = 'BANK_TRANSFER'
}

