/**
 * NIUM Platform
 * NIUM Platform
 *
 * OpenAPI spec version: 2023.12.12
 * Contact: experience@nium.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequiredFields } from '../models/RequiredFields';
import { HttpFile } from '../http/http';

export class Template {
    /**
    * This field contains the RFI document type. The possible values are: POA POI
    */
    'documentType'?: string;
    /**
    * This field contains name of the RFI template.
    */
    'name'?: string;
    /**
    * This is an array which contains the list of fields for the RFI template.
    */
    'requiredFields'?: Array<RequiredFields>;
    /**
    * This field contains the entity type for which the RFI is raised. The possible values are: corporate applicant stakeholder
    */
    'rfiType'?: string;
    /**
    * This field contains the RFI template type. It can be either Data RFI or Document RFI. The possible values are: data document
    */
    'type'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "documentType",
            "baseName": "documentType",
            "type": "string",
            "format": ""
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "requiredFields",
            "baseName": "requiredFields",
            "type": "Array<RequiredFields>",
            "format": ""
        },
        {
            "name": "rfiType",
            "baseName": "rfiType",
            "type": "string",
            "format": ""
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return Template.attributeTypeMap;
    }

    public constructor() {
    }
}

