/**
 * NIUM Platform
 * NIUM Platform
 *
 * OpenAPI spec version: 2023.12.12
 * Contact: experience@nium.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

export class UpdateBeneficiaryRequestDTO {
    /**
    * This fields accepts the authenticationCode generated as part of SCA(Strong Customer Authentication). Note: Authentication code must be passed if regulatory region of the program is UK or EU and License Entity NIUM. For other region, this field is non-mandatory.
    */
    'authenticationCode'?: string;
    'autosweepPayoutAccount'?: boolean;
    /**
    * This field accepts an account number as a beneficiary detail.
    */
    'beneficiaryAccountNumber'?: string;
    /**
    * This field accepts the bank account type of the beneficiary. The account_type can be either Individual or Company.
    */
    'beneficiaryAccountType'?: string;
    /**
    * This field accepts an address of the beneficiary.
    */
    'beneficiaryAddress'?: string;
    /**
    * This field accepts the beneficiary alias
    */
    'beneficiaryAlias'?: string;
    /**
    * This field accepts the type of account. This field is conditional in case of WALLET payout and the possible values are: • Current • Saving • Maestra • Checking
    */
    'beneficiaryBankAccountType'?: string;
    /**
    * This field accepts the bank code of the beneficiary.
    */
    'beneficiaryBankCode'?: string;
    /**
    * This field accepts the bank name of the beneficiary.
    */
    'beneficiaryBankName'?: string;
    /**
    * This field contains the beneficiary’s card expiry date.
    */
    'beneficiaryCardExpiryDate'?: string;
    /**
    * This field contains the beneficiary’s card issuer name.
    */
    'beneficiaryCardIssuerName'?: string;
    /**
    * This field accepts the city of the beneficiary.
    */
    'beneficiaryCity'?: string;
    /**
    * This field accepts the mobile number country code of the beneficiary.
    */
    'beneficiaryContactCountryCode'?: string;
    /**
    * This field accepts the name of the contact person of the business, applicable when beneficiary is a business.
    */
    'beneficiaryContactName'?: string;
    /**
    * This field accepts the mobile number of the beneficiary.
    */
    'beneficiaryContactNumber'?: string;
    /**
    * This field accepts the 2-letter [ISO-2 country code](doc:currency-and-country-codes) of the beneficiary/bank.
    */
    'beneficiaryCountryCode': string;
    'beneficiaryDob'?: string;
    /**
    * This field accepts an email of the beneficiary.
    */
    'beneficiaryEmail'?: string;
    /**
    * This field accepts the entity type of the business, when the beneficiary is a business. Refer to the ENUM value list for allowed values. The value GO indicates a majority owned subsidiary of state-owned company.
    */
    'beneficiaryEntityType'?: string;
    'beneficiaryEstablishmentDate'?: string;
    /**
    * This field accepts the type of identification document name for a beneficiary.
    */
    'beneficiaryIdentificationType'?: string;
    /**
    * This is an identification document number for the beneficiary.
    */
    'beneficiaryIdentificationValue'?: string;
    /**
    * This field accepts the name of the beneficiary.
    */
    'beneficiaryName': string;
    /**
    * This field accepts the postal code of the beneficiary.
    */
    'beneficiaryPostcode'?: string;
    /**
    * This field accepts the state of the beneficiary.
    */
    'beneficiaryState'?: string;
    /**
    * This field accepts the [ISO-2 country code](https://nium-documents.s3-eu-west-1.amazonaws.com/spend-documents/Country+Code.pdf) for the payout bank.
    */
    'destinationCountry'?: string;
    /**
    * This field accepts the 3-letter [ISO-4217 destination currency code](https://www.iso.org/iso-4217-currency-codes.html) of the payout as per the destination country from supported corridors.
    */
    'destinationCurrency': string;
    /**
    * This field accepts the system generated token number to identify the card stored at NIUM\'s platform. Note: This field is mandatory if the client is non-PCI DSS compliant.
    */
    'encryptedBeneficiaryCardToken'?: string;
    /**
    * This field accepts the payout method for the remittance payout.
    */
    'payoutMethod': UpdateBeneficiaryRequestDTOPayoutMethodEnum;
    /**
    * This field indicates the proxy type sent in the payment request. • For SGD-PayNow: The proxy type can be MOBILE, UEN, NRIC, or VPA. • For INR-UPI: The proxy type should be VPA. • For BRL-PIX: The proxy type can be MOBILE, ID, EMAIL, or RANDOM_KEY. • For AUD-PayID: The proxy type can be MOBILE, EMAIL, ABN, or ORGANISATION_ID (only domestic payouts are allowed). • For MYR-DuitNow: The proxy type can be NRIC, PASSPORT, CORPORATE_REGISTRATION_NUMBER, MOBILE, or ARMY_ID. Note: This field is mandatory when the payoutMethod type is PROXY.
    */
    'proxyType'?: string;
    /**
    * This field indicates the proxy value such as VPA, UEN, or mobile number etc. Note: This field is mandatory when the payoutMethod type is PROXY. The mobile number should include country code.
    */
    'proxyValue'?: string;
    /**
    * This field accepts the relationship of the beneficiary with the remitter.
    */
    'remitterBeneficiaryRelationship'?: string;
    /**
    * This field accepts the routing code type 1, for example, SWIFT for all countries, IFSC for India, SORT CODE for UK, ACH CODE for USA, BRANCH CODE for Brazil and Bangladesh, BSB CODE for Australia, BANK CODE for HongKong.
    */
    'routingCodeType1'?: string;
    /**
    * This field accepts the routing code type 2, for example, SWIFT for all countries, IFSC for India, SORT CODE for UK, ACH CODE for USA, BRANCH CODE for Brazil and Bangladesh, BSB CODE for Australia, BANK CODE for HongKong.
    */
    'routingCodeType2'?: string;
    /**
    * This field accepts the routing code value 1, for example, ADCBINBB or ADCBINBB123 for SWIFT, SBIN0000058 for IFSC, 100000 for SORT CODE, 111000025 for ACH CODE, 012515 for BSB CODE, 151 for BANK CODE.
    */
    'routingCodeValue1'?: string;
    /**
    * This field accepts the routing code value 2, for example, ADCBINBB or ADCBINBB123 for SWIFT, SBIN0000058 for IFSC, 100000 for SORT CODE, 111000025 for ACH CODE, 012515 for BSB CODE, 151 for BANK CODE.
    */
    'routingCodeValue2'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "authenticationCode",
            "baseName": "authenticationCode",
            "type": "string",
            "format": ""
        },
        {
            "name": "autosweepPayoutAccount",
            "baseName": "autosweepPayoutAccount",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "beneficiaryAccountNumber",
            "baseName": "beneficiaryAccountNumber",
            "type": "string",
            "format": ""
        },
        {
            "name": "beneficiaryAccountType",
            "baseName": "beneficiaryAccountType",
            "type": "string",
            "format": ""
        },
        {
            "name": "beneficiaryAddress",
            "baseName": "beneficiaryAddress",
            "type": "string",
            "format": ""
        },
        {
            "name": "beneficiaryAlias",
            "baseName": "beneficiaryAlias",
            "type": "string",
            "format": ""
        },
        {
            "name": "beneficiaryBankAccountType",
            "baseName": "beneficiaryBankAccountType",
            "type": "string",
            "format": ""
        },
        {
            "name": "beneficiaryBankCode",
            "baseName": "beneficiaryBankCode",
            "type": "string",
            "format": ""
        },
        {
            "name": "beneficiaryBankName",
            "baseName": "beneficiaryBankName",
            "type": "string",
            "format": ""
        },
        {
            "name": "beneficiaryCardExpiryDate",
            "baseName": "beneficiaryCardExpiryDate",
            "type": "string",
            "format": ""
        },
        {
            "name": "beneficiaryCardIssuerName",
            "baseName": "beneficiaryCardIssuerName",
            "type": "string",
            "format": ""
        },
        {
            "name": "beneficiaryCity",
            "baseName": "beneficiaryCity",
            "type": "string",
            "format": ""
        },
        {
            "name": "beneficiaryContactCountryCode",
            "baseName": "beneficiaryContactCountryCode",
            "type": "string",
            "format": ""
        },
        {
            "name": "beneficiaryContactName",
            "baseName": "beneficiaryContactName",
            "type": "string",
            "format": ""
        },
        {
            "name": "beneficiaryContactNumber",
            "baseName": "beneficiaryContactNumber",
            "type": "string",
            "format": ""
        },
        {
            "name": "beneficiaryCountryCode",
            "baseName": "beneficiaryCountryCode",
            "type": "string",
            "format": ""
        },
        {
            "name": "beneficiaryDob",
            "baseName": "beneficiaryDob",
            "type": "string",
            "format": ""
        },
        {
            "name": "beneficiaryEmail",
            "baseName": "beneficiaryEmail",
            "type": "string",
            "format": ""
        },
        {
            "name": "beneficiaryEntityType",
            "baseName": "beneficiaryEntityType",
            "type": "string",
            "format": ""
        },
        {
            "name": "beneficiaryEstablishmentDate",
            "baseName": "beneficiaryEstablishmentDate",
            "type": "string",
            "format": ""
        },
        {
            "name": "beneficiaryIdentificationType",
            "baseName": "beneficiaryIdentificationType",
            "type": "string",
            "format": ""
        },
        {
            "name": "beneficiaryIdentificationValue",
            "baseName": "beneficiaryIdentificationValue",
            "type": "string",
            "format": ""
        },
        {
            "name": "beneficiaryName",
            "baseName": "beneficiaryName",
            "type": "string",
            "format": ""
        },
        {
            "name": "beneficiaryPostcode",
            "baseName": "beneficiaryPostcode",
            "type": "string",
            "format": ""
        },
        {
            "name": "beneficiaryState",
            "baseName": "beneficiaryState",
            "type": "string",
            "format": ""
        },
        {
            "name": "destinationCountry",
            "baseName": "destinationCountry",
            "type": "string",
            "format": ""
        },
        {
            "name": "destinationCurrency",
            "baseName": "destinationCurrency",
            "type": "string",
            "format": ""
        },
        {
            "name": "encryptedBeneficiaryCardToken",
            "baseName": "encryptedBeneficiaryCardToken",
            "type": "string",
            "format": ""
        },
        {
            "name": "payoutMethod",
            "baseName": "payoutMethod",
            "type": "UpdateBeneficiaryRequestDTOPayoutMethodEnum",
            "format": ""
        },
        {
            "name": "proxyType",
            "baseName": "proxyType",
            "type": "string",
            "format": ""
        },
        {
            "name": "proxyValue",
            "baseName": "proxyValue",
            "type": "string",
            "format": ""
        },
        {
            "name": "remitterBeneficiaryRelationship",
            "baseName": "remitterBeneficiaryRelationship",
            "type": "string",
            "format": ""
        },
        {
            "name": "routingCodeType1",
            "baseName": "routingCodeType1",
            "type": "string",
            "format": ""
        },
        {
            "name": "routingCodeType2",
            "baseName": "routingCodeType2",
            "type": "string",
            "format": ""
        },
        {
            "name": "routingCodeValue1",
            "baseName": "routingCodeValue1",
            "type": "string",
            "format": ""
        },
        {
            "name": "routingCodeValue2",
            "baseName": "routingCodeValue2",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return UpdateBeneficiaryRequestDTO.attributeTypeMap;
    }

    public constructor() {
    }
}


export enum UpdateBeneficiaryRequestDTOPayoutMethodEnum {
    Local = 'LOCAL',
    Swift = 'SWIFT',
    Wallet = 'WALLET',
    Cash = 'CASH',
    Card = 'CARD',
    Proxy = 'PROXY'
}

