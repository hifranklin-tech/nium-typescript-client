/**
 * NIUM Platform
 * NIUM Platform
 *
 * OpenAPI spec version: 2023.12.12
 * Contact: experience@nium.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { CustomerTaxDetailDTO } from '../models/CustomerTaxDetailDTO';
import { HttpFile } from '../http/http';

export class EVerifyCustomerRegistrationRequestDTO {
    /**
    * This field accepts the line 1 of customer’s billing address. Maximum character limit: 40
    */
    'billingAddress1': string;
    /**
    * This field accepts the line 2 of customer’s billing address. Maximum character limit: 40
    */
    'billingAddress2'?: string;
    /**
    * This field accepts the city of customer’s billing address. Maximum character limit: 20
    */
    'billingCity': string;
    /**
    * This field accepts the 2-letter [ISO Alpha-2 country code](doc:currency-and-country-codes) denoting the country of customer’s billing address.
    */
    'billingCountry': string;
    /**
    * This field accepts the state of customer’s billing address. Maximum character limit: 30
    */
    'billingState'?: string;
    /**
    * This field accepts the zipcode of customer’s billing address. Maximum character limit: 10
    */
    'billingZipCode': string;
    /**
    * This field accepts the 2-letter [ISO Alpha-2 country code](doc:currency-and-country-codes) denoting the country prefix code to the customer’s mobile number.
    */
    'countryCode': string;
    /**
    * This field accepts the country IP for the device by the customer for initiating the request.
    */
    'countryIP'?: string;
    /**
    * This field accepts the 2-letter [ISO country code](doc:currency-and-country-codes) denoting the customer’s country of birth. Note: This field is mandatory for EU and UK.
    */
    'countryOfBirth'?: string;
    /**
    * This field accepts previously generated unique customer identifier of customer.
    */
    'customerHashId': string;
    /**
    * This field accepts the date of birth of the customer in YYYY-MM-DD format. Minimum customer age should be 18 years. Discuss with your NIUM account manager for any special use-cases.
    */
    'dateOfBirth': string;
    /**
    * This field accepts the OS of the device used by the customer for initiating the request.
    */
    'deviceInfo'?: string;
    /**
    * This field accepts the unique email address of the customer. Maximum character limit: 60
    */
    'email': string;
    /**
    * This field accepts the estimated monthly funding amount expected in the wallet. This field is required when estimatedMonthlyFundingCurrency field is provided in the request. The possible values are: • <1000 • 1000-5000 • 5001-10000 • 10001-20000 • >20000 Note: This field is mandatory for EU and UK.
    */
    'estimatedMonthlyFunding'?: string;
    /**
    * This field accepts the 3-letter [ISO-4217 currency code](doc:currency-and-country-codes) in which estimated monthly funding is expected in the wallet, for example, SGD. Note: This field is mandatory for EU and UK.
    */
    'estimatedMonthlyFundingCurrency'?: string;
    /**
    * This is an array of 2-letter [ISO Alpha-2 country code](doc:currency-and-country-codes) to allow the client to capture the expected countries to send/receive international payments from. This field is required when internationalPaymentsSupported field is true, for example, [“FR”, “DE”]. Note: This field is mandatory for EU and UK.
    */
    'expectedCountriesToSendReceiveFrom'?: Array<string>;
    /**
    * This field accepts the first name of the customer. Maximum character limit: 40
    */
    'firstName': string;
    /**
    * This field accepts the gender of the customer.
    */
    'gender'?: string;
    /**
    * **Conditional** This field accepts the customer’s intended use of account.  Note: This field is mandatory for EU and UK.
    */
    'intendedUseOfAccount'?: string;
    /**
    * This field specifies if the customer will be doing International send/receive payments. The default value will be false. Note: This field is mandatory for EU and UK.
    */
    'internationalPaymentsSupported'?: boolean;
    /**
    * This field accepts the IP address of the device used by the customer for initiating the request.
    */
    'ipAddress'?: string;
    /**
    * This field accepts the last name of the customer. Maximum character limit: 40
    */
    'lastName': string;
    /**
    * This field accepts the middle name of the customer. Maximum character limit: 40
    */
    'middleName'?: string;
    /**
    * This field accepts the mobile number of the customer without the country prefix code. Maximum character limit: 20
    */
    'mobile': string;
    /**
    * This field accepts the 2-letter [ISO Alpha-2 country code](doc:currency-and-country-codes) denoting the customer’s citizenship.
    */
    'nationality': string;
    /**
    * This field accepts the customer\'s name in native language. Maximum character limit: 40
    */
    'nativeLanguageName'?: string;
    /**
    * This field specifies if the customer is a Politically Exposed Person (PEP) or not. Note: This field is mandatory for EU and UK.
    */
    'pep'?: boolean;
    /**
    * This field accepts the common name or preferred name of the customer. It is also acceptable to pass the first name in this field. Maximum character limit: 40
    */
    'preferredName'?: string;
    /**
    * This field accepts the fee segment associated with a client. Maximum character limit: 64
    */
    'segment'?: string;
    /**
    * This field accepts the session ID for the session of the customer for initiating the request.
    */
    'sessionId'?: string;
    /**
    * This is an array of tax details provided for compliance onboarding for EU customers. Note: This field is mandatory for EU and UK.
    */
    'taxDetails'?: Array<CustomerTaxDetailDTO>;
    'upgradeRequest'?: boolean;
    /**
    * This field specifies if the electronic verification consent to process customer data for compliance or not.
    */
    'verificationConsent': boolean;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "billingAddress1",
            "baseName": "billingAddress1",
            "type": "string",
            "format": ""
        },
        {
            "name": "billingAddress2",
            "baseName": "billingAddress2",
            "type": "string",
            "format": ""
        },
        {
            "name": "billingCity",
            "baseName": "billingCity",
            "type": "string",
            "format": ""
        },
        {
            "name": "billingCountry",
            "baseName": "billingCountry",
            "type": "string",
            "format": ""
        },
        {
            "name": "billingState",
            "baseName": "billingState",
            "type": "string",
            "format": ""
        },
        {
            "name": "billingZipCode",
            "baseName": "billingZipCode",
            "type": "string",
            "format": ""
        },
        {
            "name": "countryCode",
            "baseName": "countryCode",
            "type": "string",
            "format": ""
        },
        {
            "name": "countryIP",
            "baseName": "countryIP",
            "type": "string",
            "format": ""
        },
        {
            "name": "countryOfBirth",
            "baseName": "countryOfBirth",
            "type": "string",
            "format": ""
        },
        {
            "name": "customerHashId",
            "baseName": "customerHashId",
            "type": "string",
            "format": "uuid"
        },
        {
            "name": "dateOfBirth",
            "baseName": "dateOfBirth",
            "type": "string",
            "format": ""
        },
        {
            "name": "deviceInfo",
            "baseName": "deviceInfo",
            "type": "string",
            "format": ""
        },
        {
            "name": "email",
            "baseName": "email",
            "type": "string",
            "format": ""
        },
        {
            "name": "estimatedMonthlyFunding",
            "baseName": "estimatedMonthlyFunding",
            "type": "string",
            "format": ""
        },
        {
            "name": "estimatedMonthlyFundingCurrency",
            "baseName": "estimatedMonthlyFundingCurrency",
            "type": "string",
            "format": ""
        },
        {
            "name": "expectedCountriesToSendReceiveFrom",
            "baseName": "expectedCountriesToSendReceiveFrom",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "firstName",
            "baseName": "firstName",
            "type": "string",
            "format": ""
        },
        {
            "name": "gender",
            "baseName": "gender",
            "type": "string",
            "format": ""
        },
        {
            "name": "intendedUseOfAccount",
            "baseName": "intendedUseOfAccount",
            "type": "string",
            "format": ""
        },
        {
            "name": "internationalPaymentsSupported",
            "baseName": "internationalPaymentsSupported",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "ipAddress",
            "baseName": "ipAddress",
            "type": "string",
            "format": ""
        },
        {
            "name": "lastName",
            "baseName": "lastName",
            "type": "string",
            "format": ""
        },
        {
            "name": "middleName",
            "baseName": "middleName",
            "type": "string",
            "format": ""
        },
        {
            "name": "mobile",
            "baseName": "mobile",
            "type": "string",
            "format": ""
        },
        {
            "name": "nationality",
            "baseName": "nationality",
            "type": "string",
            "format": ""
        },
        {
            "name": "nativeLanguageName",
            "baseName": "nativeLanguageName",
            "type": "string",
            "format": ""
        },
        {
            "name": "pep",
            "baseName": "pep",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "preferredName",
            "baseName": "preferredName",
            "type": "string",
            "format": ""
        },
        {
            "name": "segment",
            "baseName": "segment",
            "type": "string",
            "format": ""
        },
        {
            "name": "sessionId",
            "baseName": "sessionId",
            "type": "string",
            "format": ""
        },
        {
            "name": "taxDetails",
            "baseName": "taxDetails",
            "type": "Array<CustomerTaxDetailDTO>",
            "format": ""
        },
        {
            "name": "upgradeRequest",
            "baseName": "upgradeRequest",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "verificationConsent",
            "baseName": "verificationConsent",
            "type": "boolean",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return EVerifyCustomerRegistrationRequestDTO.attributeTypeMap;
    }

    public constructor() {
    }
}

