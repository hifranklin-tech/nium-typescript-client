/**
 * NIUM Platform
 * NIUM Platform
 *
 * OpenAPI spec version: 2023.12.12
 * Contact: experience@nium.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

export class WalletPaymentIdsResponseDTO {
    /**
    * This is a map object containing user defined key-value pairs provided by the client for the wallet payment IDs.
    */
    'tags'?: { [key: string]: string; };
    'accountCategory'?: WalletPaymentIdsResponseDTOAccountCategoryEnum;
    /**
    * This field contains the account name of the virtual account.
    */
    'accountName'?: string;
    /**
    * This field contains the account type of the virtual account.
    */
    'accountType'?: string;
    /**
    * This field contains the bank address of the virtual account.
    */
    'bankAddress'?: string;
    /**
    * This field represents the bank name of the virtual account and the possible values are: * BOL_LT * MONOOVA_AU * DBS_HK * DBS_SG * JPM_AU * JPM_SG * CB_GB * CFSB_USINTL * JPM_UK
    */
    'bankName'?: string;
    /**
    * This field contains the 2-letter [ISO-2 country code](doc:currency-and-country-codes).
    */
    'currencyCode'?: string;
    /**
    * This field contains the complete name of the bank for the virtual account.
    */
    'fullBankName'?: string;
    /**
    * This field contains the routing code type 1.
    */
    'routingCodeType1'?: string;
    /**
    * This field contains the routing code type 2.
    */
    'routingCodeType2'?: string;
    /**
    * This field contains the routing code value 1. Refer to the [Examples of Routing Codes](/apis/docs/routing-codes#examples-of-routing-codes).
    */
    'routingCodeValue1'?: string;
    /**
    * This field contains the routing code value 2.
    */
    'routingCodeValue2'?: string;
    'status'?: WalletPaymentIdsResponseDTOStatusEnum;
    /**
    * This field contains the unique payer ID.
    */
    'uniquePayerId'?: string;
    /**
    * This field contains the unique payment ID.
    */
    'uniquePaymentId'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "tags",
            "baseName": "tags",
            "type": "{ [key: string]: string; }",
            "format": ""
        },
        {
            "name": "accountCategory",
            "baseName": "accountCategory",
            "type": "WalletPaymentIdsResponseDTOAccountCategoryEnum",
            "format": ""
        },
        {
            "name": "accountName",
            "baseName": "accountName",
            "type": "string",
            "format": ""
        },
        {
            "name": "accountType",
            "baseName": "accountType",
            "type": "string",
            "format": ""
        },
        {
            "name": "bankAddress",
            "baseName": "bankAddress",
            "type": "string",
            "format": ""
        },
        {
            "name": "bankName",
            "baseName": "bankName",
            "type": "string",
            "format": ""
        },
        {
            "name": "currencyCode",
            "baseName": "currencyCode",
            "type": "string",
            "format": ""
        },
        {
            "name": "fullBankName",
            "baseName": "fullBankName",
            "type": "string",
            "format": ""
        },
        {
            "name": "routingCodeType1",
            "baseName": "routingCodeType1",
            "type": "string",
            "format": ""
        },
        {
            "name": "routingCodeType2",
            "baseName": "routingCodeType2",
            "type": "string",
            "format": ""
        },
        {
            "name": "routingCodeValue1",
            "baseName": "routingCodeValue1",
            "type": "string",
            "format": ""
        },
        {
            "name": "routingCodeValue2",
            "baseName": "routingCodeValue2",
            "type": "string",
            "format": ""
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "WalletPaymentIdsResponseDTOStatusEnum",
            "format": ""
        },
        {
            "name": "uniquePayerId",
            "baseName": "uniquePayerId",
            "type": "string",
            "format": ""
        },
        {
            "name": "uniquePaymentId",
            "baseName": "uniquePaymentId",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return WalletPaymentIdsResponseDTO.attributeTypeMap;
    }

    public constructor() {
    }
}


export enum WalletPaymentIdsResponseDTOAccountCategoryEnum {
    SelfFundingAccount = 'SELF_FUNDING_ACCOUNT',
    CollectionAccount = 'COLLECTION_ACCOUNT'
}
export enum WalletPaymentIdsResponseDTOStatusEnum {
    Active = 'ACTIVE',
    Inactive = 'INACTIVE',
    Blocked = 'BLOCKED',
    Suspended = 'SUSPENDED',
    Uploaded = 'UPLOADED',
    Approved = 'APPROVED',
    Rejected = 'REJECTED',
    Failed = 'FAILED',
    Success = 'SUCCESS',
    Failure = 'FAILURE',
    PartiallySuccess = 'PARTIALLY SUCCESS',
    Sync = 'SYNC',
    NotSync = 'NOT SYNC',
    Pending = 'PENDING',
    RequiresAction = 'REQUIRES_ACTION',
    Clear = 'CLEAR',
    Declined = 'DECLINED',
    AccountBlocked = 'ACCOUNT_BLOCKED',
    AmountBlocked = 'AMOUNT_BLOCKED'
}

