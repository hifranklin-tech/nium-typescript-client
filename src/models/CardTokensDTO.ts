/**
 * NIUM Platform
 * NIUM Platform
 *
 * OpenAPI spec version: 2023.12.12
 * Contact: experience@nium.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

/**
* This array contains the token details.
*/
export class CardTokensDTO {
    /**
    * This field contains the wallet provider.It can contain two values - googlePay applePay
    */
    'providerType'?: CardTokensDTOProviderTypeEnum;
    /**
    * This field contains the reference number for the token provided against the provisioning request.
    */
    'tokenReferenceNumber'?: string;
    /**
    * This field contains the token value created for the provisioned card.
    */
    'tokenNumber'?: string;
    /**
    * This field contains the identifier for the provisioning service.
    */
    'tokenRequesterId'?: CardTokensDTOTokenRequesterIdEnum;
    /**
    * This field contains the unique ID of the device on which the card is provisioned.
    */
    'deviceId'?: string;
    /**
    * This field contains the device type in numeric format used for provisioning.
    */
    'deviceType'?: string;
    /**
    * This field contains the token status.
    */
    'status'?: CardTokensDTOStatusEnum;
    /**
    * This field contains the date and time of token creation in the format - YYYY-MM-DD HH:mm:ss.
    */
    'createdAt'?: string;
    /**
    * This field contains the date and time of token update in the format - YYYY-MM-DD HH:mm:ss.
    */
    'updatedAt'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "providerType",
            "baseName": "providerType",
            "type": "CardTokensDTOProviderTypeEnum",
            "format": ""
        },
        {
            "name": "tokenReferenceNumber",
            "baseName": "tokenReferenceNumber",
            "type": "string",
            "format": ""
        },
        {
            "name": "tokenNumber",
            "baseName": "tokenNumber",
            "type": "string",
            "format": ""
        },
        {
            "name": "tokenRequesterId",
            "baseName": "tokenRequesterId",
            "type": "CardTokensDTOTokenRequesterIdEnum",
            "format": ""
        },
        {
            "name": "deviceId",
            "baseName": "deviceId",
            "type": "string",
            "format": ""
        },
        {
            "name": "deviceType",
            "baseName": "deviceType",
            "type": "string",
            "format": ""
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "CardTokensDTOStatusEnum",
            "format": ""
        },
        {
            "name": "createdAt",
            "baseName": "createdAt",
            "type": "string",
            "format": ""
        },
        {
            "name": "updatedAt",
            "baseName": "updatedAt",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return CardTokensDTO.attributeTypeMap;
    }

    public constructor() {
    }
}


export enum CardTokensDTOProviderTypeEnum {
    GooglePayapplePaysamsungPayunknown = 'googlePay,applePay,samsungPay,unknown'
}
export enum CardTokensDTOTokenRequesterIdEnum {
    GooglePayapplePay = 'googlePay,applePay'
}
export enum CardTokensDTOStatusEnum {
    Activesuspendeddeactivatedunknown = 'ACTIVE,SUSPENDED,DEACTIVATED,UNKNOWN'
}

