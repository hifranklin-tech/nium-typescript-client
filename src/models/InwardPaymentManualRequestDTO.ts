/**
 * NIUM Platform
 * NIUM Platform
 *
 * OpenAPI spec version: 2023.12.12
 * Contact: experience@nium.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

export class InwardPaymentManualRequestDTO {
    /**
    * This object accepts the additional information
    */
    'additionalInfo'?: { [key: string]: string; };
    /**
    * This field contains the amount.
    */
    'amount'?: number;
    /**
    * This field contains the bank reference number
    */
    'bankReferenceNumber'?: string;
    /**
    * This field contains the source of payment/fund.
    */
    'bankSource'?: InwardPaymentManualRequestDTOBankSourceEnum;
    /**
    * This field contains the country.
    */
    'country'?: string;
    /**
    * This field contains the 3-letter currency code.
    */
    'currency'?: InwardPaymentManualRequestDTOCurrencyEnum;
    /**
    * This field contains the expiry time for ICC.
    */
    'iccExpiry'?: string;
    /**
    * This field contains the payment instruction type
    */
    'instructionType'?: InwardPaymentManualRequestDTOInstructionTypeEnum;
    /**
    * This field contains the narrative.
    */
    'narrative'?: string;
    /**
    * This field contains the remitter account number.
    */
    'remitterAccountNumber'?: string;
    /**
    * This field contains the remitter bank code.
    */
    'remitterBankCode'?: string;
    /**
    * This field contains the remitter bank name.
    */
    'remitterBankName'?: string;
    /**
    * This field contains the remitter name.
    */
    'remitterName'?: string;
    /**
    * This field contains the remitter name local language.
    */
    'remitterNameLocalLanguage'?: string;
    /**
    * This field contains the transaction reference number/ID.
    */
    'transactionId'?: string;
    /**
    * This field contains the ICC transaction source.
    */
    'transactionSource'?: string;
    /**
    * This field contains the ICC entry type.
    */
    'type'?: string;
    /**
    * This field contains the virtual account number.
    */
    'virtualAccountNumber'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "additionalInfo",
            "baseName": "additionalInfo",
            "type": "{ [key: string]: string; }",
            "format": ""
        },
        {
            "name": "amount",
            "baseName": "amount",
            "type": "number",
            "format": "double"
        },
        {
            "name": "bankReferenceNumber",
            "baseName": "bankReferenceNumber",
            "type": "string",
            "format": ""
        },
        {
            "name": "bankSource",
            "baseName": "bankSource",
            "type": "InwardPaymentManualRequestDTOBankSourceEnum",
            "format": ""
        },
        {
            "name": "country",
            "baseName": "country",
            "type": "string",
            "format": ""
        },
        {
            "name": "currency",
            "baseName": "currency",
            "type": "InwardPaymentManualRequestDTOCurrencyEnum",
            "format": ""
        },
        {
            "name": "iccExpiry",
            "baseName": "iccExpiry",
            "type": "string",
            "format": ""
        },
        {
            "name": "instructionType",
            "baseName": "instructionType",
            "type": "InwardPaymentManualRequestDTOInstructionTypeEnum",
            "format": ""
        },
        {
            "name": "narrative",
            "baseName": "narrative",
            "type": "string",
            "format": ""
        },
        {
            "name": "remitterAccountNumber",
            "baseName": "remitterAccountNumber",
            "type": "string",
            "format": ""
        },
        {
            "name": "remitterBankCode",
            "baseName": "remitterBankCode",
            "type": "string",
            "format": ""
        },
        {
            "name": "remitterBankName",
            "baseName": "remitterBankName",
            "type": "string",
            "format": ""
        },
        {
            "name": "remitterName",
            "baseName": "remitterName",
            "type": "string",
            "format": ""
        },
        {
            "name": "remitterNameLocalLanguage",
            "baseName": "remitterNameLocalLanguage",
            "type": "string",
            "format": ""
        },
        {
            "name": "transactionId",
            "baseName": "transactionId",
            "type": "string",
            "format": ""
        },
        {
            "name": "transactionSource",
            "baseName": "transactionSource",
            "type": "string",
            "format": ""
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "string",
            "format": ""
        },
        {
            "name": "virtualAccountNumber",
            "baseName": "virtualAccountNumber",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return InwardPaymentManualRequestDTO.attributeTypeMap;
    }

    public constructor() {
    }
}


export enum InwardPaymentManualRequestDTOBankSourceEnum {
    DbsHk = 'DBS_HK',
    DbsSg = 'DBS_SG',
    JpmSg = 'JPM_SG',
    JpmAu = 'JPM_AU',
    JpmUk = 'JPM_UK',
    MonoovaAu = 'MONOOVA_AU',
    BolLt = 'BOL_LT',
    CbGb = 'CB_GB',
    CfsbUs = 'CFSB_US',
    Barclays = 'BARCLAYS',
    CitiSg = 'CITI_SG',
    CitiMx = 'CITI_MX',
    CfsbUsintl = 'CFSB_USINTL',
    GmoJp = 'GMO_JP',
    NetbankPh = 'NETBANK_PH',
    Gocardless = 'GOCARDLESS',
    DirectfastSg = 'DIRECTFAST_SG',
    BankingcirclePl = 'BANKINGCIRCLE_PL'
}
export enum InwardPaymentManualRequestDTOCurrencyEnum {
    Sgd = 'SGD',
    Aud = 'AUD',
    Eur = 'EUR',
    Hkd = 'HKD',
    Usd = 'USD',
    Gbp = 'GBP',
    Aed = 'AED',
    Cad = 'CAD',
    Chf = 'CHF',
    Czk = 'CZK',
    Dkk = 'DKK',
    Huf = 'HUF',
    Ils = 'ILS',
    Mxn = 'MXN',
    Nok = 'NOK',
    Nzd = 'NZD',
    Pln = 'PLN',
    Ron = 'RON',
    Rub = 'RUB',
    Sek = 'SEK',
    Zar = 'ZAR',
    Cny = 'CNY',
    Jpy = 'JPY',
    Thb = 'THB',
    Try = 'TRY',
    Php = 'PHP'
}
export enum InwardPaymentManualRequestDTOInstructionTypeEnum {
    Inquiry = 'INQUIRY',
    Process = 'PROCESS'
}

