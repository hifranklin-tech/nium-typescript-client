/**
 * NIUM Platform
 * NIUM Platform
 *
 * OpenAPI spec version: 2023.12.12
 * Contact: experience@nium.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { ComplianceIdentificationDocDTO } from '../models/ComplianceIdentificationDocDTO';
import { CustomerTaxDetailDTO } from '../models/CustomerTaxDetailDTO';
import { HttpFile } from '../http/http';

export class CustomerDataRequestDTO {
    /**
    * This is key/value pair object which accepts additional info. Expected keys are identificationType and identificationValue   identificationType  : This field accepts the name of the identification type, for example, Passport.  Note: This field is mandatory for certain clients with certain KYC modes pre-approved by NIUM\'s compliance or when the KYC mode is Screening. If you have plans to offer the Payout/Send feature, reach out to your NIUM\'s representative to discuss on the requirement of this field.   identificationValue : This field accepts the identification value provided by the customer. Note: This field is mandatory for certain clients with KYC modes pre-approved by NIUM\'s compliance or when the KYC mode is Screening.  Example : { \"identificationType\": \"Passport\",  \"identificationValue\" : \"P123456A\" }
    */
    'additionalInfo'?: { [key: string]: string; };
    /**
    * This field accepts the line 1 of customer’s billing address. Maximum character limit: 40
    */
    'billingAddress1': string;
    /**
    * This field accepts the line 2 of customer’s billing address. Maximum character limit: 40
    */
    'billingAddress2'?: string;
    /**
    * This field accepts the city of customer’s billing address. Maximum character limit: 20
    */
    'billingCity': string;
    /**
    * This field accepts the 2-letter [ISO Alpha-2 country code](doc:currency-and-country-codes) denoting the country of customer’s billing address.
    */
    'billingCountry': string;
    /**
    * This field accepts the landmark for customer’s billing address. Maximum character limit: 40
    */
    'billingLandmark'?: string;
    /**
    * This field accepts the state of customer’s billing address. Maximum character limit: 30
    */
    'billingState'?: string;
    /**
    * This field accepts the zipcode of customer’s billing address. Maximum character limit: 10
    */
    'billingZipCode': string;
    'birthCountry'?: string;
    /**
    * This field accepts the line 1 of customer\'s correspondence address. Maximum character limit: 40
    */
    'correspondenceAddress1'?: string;
    /**
    * This field accepts the line 2 of customer\'s correspondence address. Maximum character limit: 40
    */
    'correspondenceAddress2'?: string;
    /**
    * This field accepts the city of customer\'s correspondence address. Maximum character limit: 20
    */
    'correspondenceCity'?: string;
    /**
    * This field accepts the 2-letter [ISO Alpha-2 country code](doc:currency-and-country-codes) denoting the country of customer\'s correspondence address.
    */
    'correspondenceCountry'?: string;
    /**
    * This field accepts the landmark for customer\'s correspondence address. Maximum character limit: 40
    */
    'correspondenceLandmark'?: string;
    /**
    * This field accepts the state of customer’s correspondence address. Maximum character limit: 30
    */
    'correspondenceState'?: string;
    /**
    * This field accepts the zipcode of customer\'s correspondence address. Maximum character limit: 10
    */
    'correspondenceZipCode'?: string;
    /**
    * This field accepts the 2-letter [ISO Alpha-2 country code](doc:currency-and-country-codes) denoting the country prefix code to the customer’s mobile number.
    */
    'countryCode': string;
    /**
    * The country IP for the device by the customer for initiating the request.
    */
    'countryIP'?: string;
    /**
    * This field accepts the 2-letter [ISO country code](doc:currency-and-country-codes) denoting the customer’s country of birth. Note:This field is mandatory for EU and UK.
    */
    'countryOfBirth'?: string;
    /**
    * This field accepts previously generated unique customer identifier of customer.
    */
    'customerHashId': string;
    /**
    * This field accepts the date of birth of the customer in YYYY-MM-DD format. Minimum customer age should be 18 years. Discuss with your NIUM account manager for any special use-cases.
    */
    'dateOfBirth': string;
    /**
    * This field accepts the line 1 of customer’s delivery address. Maximum character limit: 40
    */
    'deliveryAddress1': string;
    /**
    * This field accepts the line 2 of customer\'s delivery address. Maximum character limit: 40
    */
    'deliveryAddress2'?: string;
    /**
    * This field accepts the city of customer’s delivery address. Maximum character limit: 20
    */
    'deliveryCity': string;
    /**
    * This field accepts the 2-letter [ISO Alpha-2 country code](doc:currency-and-country-codes) denoting the country of customer’s billing address.
    */
    'deliveryCountry': string;
    /**
    * This field accepts the landmark for customer\'s delivery address. Maximum character limit: 40
    */
    'deliveryLandmark'?: string;
    /**
    * This field accepts the state of customer\'s delivery address. Maximum character limit: 30
    */
    'deliveryState'?: string;
    /**
    * This field accepts the zipcode of customer\'s delivery address. Maximum character limit: 10
    */
    'deliveryZipCode': string;
    /**
    * The OS of the device used by the customer for initiating the request.
    */
    'deviceInfo'?: string;
    /**
    * This field accepts the unique email address of the customer.  Maximum character limit: 60
    */
    'email': string;
    'enableDocUpload'?: boolean;
    /**
    * This field accepts the estimated monthly funding amount expected in the wallet. This field is required when estimatedMonthlyFundingCurrency field is provided in the request. Note:This field is mandatory for EU and UK.
    */
    'estimatedMonthlyFunding'?: CustomerDataRequestDTOEstimatedMonthlyFundingEnum;
    /**
    * This field accepts the 3-letter [ISO-4217 currency code](doc:currency-and-country-codes) in which estimated monthly funding is expected in the wallet, for example, SGD. Note:This field is mandatory for EU and UK.
    */
    'estimatedMonthlyFundingCurrency'?: string;
    /**
    * This is an array of 2-letter [ISO Alpha-2 country code](doc:currency-and-country-codes) to allow the client to capture the expected countries to send/receive international payments from. This field is required when internationalPaymentsSupported field is true, for example, [“FR”, “DE”]. Note:This field is mandatory for EU and UK.
    */
    'expectedCountriesToSendReceiveFrom'?: Array<string>;
    /**
    * This field accepts the first name of the customer.  Maximum character limit: 40
    */
    'firstName': string;
    /**
    * This field accepts the gender of the customer.
    */
    'gender'?: CustomerDataRequestDTOGenderEnum;
    'identificationDoc'?: Array<ComplianceIdentificationDocDTO>;
    /**
    * This field accepts customer’s intended use of account. Note:This field is mandatory for EU and UK.
    */
    'intendedUseOfAccount'?: CustomerDataRequestDTOIntendedUseOfAccountEnum;
    /**
    * This field indicates if the customer will be doing International send/receive payments. The default value will be false. Note:This field is mandatory for EU and UK.
    */
    'internationalPaymentsSupported'?: boolean;
    /**
    * The IP address of the device used by the customer for initiating the request.
    */
    'ipAddress'?: string;
    'kyc'?: boolean;
    /**
    * This field accepts the last name of the customer. Maximum character limit: 40
    */
    'lastName': string;
    /**
    * This field accepts the middle name of the customer.  Maximum character limit: 40
    */
    'middleName'?: string;
    /**
    * This field accepts the mobile number of the customer--digits only--without the country code. Maximum character limit: 20
    */
    'mobile': string;
    /**
    * This field accepts the 2-letter [ISO Alpha-2 country code](doc:currency-and-country-codes) denoting the customer’s citizenship.
    */
    'nationality': string;
    /**
    * This field contains the customer\'s name in native language.  Maximum character limit: 40
    */
    'nativeLanguageName'?: string;
    /**
    * This field accepts the customer’s occupation. Refer to [Enum values](https://docs.nium.com/apis/docs/unified-add-customer-api) for the description.   Note: This field is mandatory for CA.
    */
    'occupation'?: CustomerDataRequestDTOOccupationEnum;
    /**
    * This field will ensure either a customer is a Politically Exposed Person (PEP) or not. Note:This field is mandatory for EU and UK.
    */
    'pep': boolean;
    /**
    * This field accepts the common name or preferred name of the customer. It is also acceptable to pass the first name in this field. Maximum character limit: 40
    */
    'preferredName'?: string;
    /**
    * This is the fee segment associated with a client. Maximum character limit: 64
    */
    'segment'?: string;
    /**
    * The session Id for the session of the customer for initiating the request.
    */
    'sessionId'?: string;
    /**
    * This is an array of tax details provided for compliance onboarding for EU customers. Note:This field is mandatory for EU and UK.
    */
    'taxDetails': Array<CustomerTaxDetailDTO>;
    'upgradeRequest'?: boolean;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "additionalInfo",
            "baseName": "additionalInfo",
            "type": "{ [key: string]: string; }",
            "format": ""
        },
        {
            "name": "billingAddress1",
            "baseName": "billingAddress1",
            "type": "string",
            "format": ""
        },
        {
            "name": "billingAddress2",
            "baseName": "billingAddress2",
            "type": "string",
            "format": ""
        },
        {
            "name": "billingCity",
            "baseName": "billingCity",
            "type": "string",
            "format": ""
        },
        {
            "name": "billingCountry",
            "baseName": "billingCountry",
            "type": "string",
            "format": ""
        },
        {
            "name": "billingLandmark",
            "baseName": "billingLandmark",
            "type": "string",
            "format": ""
        },
        {
            "name": "billingState",
            "baseName": "billingState",
            "type": "string",
            "format": ""
        },
        {
            "name": "billingZipCode",
            "baseName": "billingZipCode",
            "type": "string",
            "format": ""
        },
        {
            "name": "birthCountry",
            "baseName": "birthCountry",
            "type": "string",
            "format": ""
        },
        {
            "name": "correspondenceAddress1",
            "baseName": "correspondenceAddress1",
            "type": "string",
            "format": ""
        },
        {
            "name": "correspondenceAddress2",
            "baseName": "correspondenceAddress2",
            "type": "string",
            "format": ""
        },
        {
            "name": "correspondenceCity",
            "baseName": "correspondenceCity",
            "type": "string",
            "format": ""
        },
        {
            "name": "correspondenceCountry",
            "baseName": "correspondenceCountry",
            "type": "string",
            "format": ""
        },
        {
            "name": "correspondenceLandmark",
            "baseName": "correspondenceLandmark",
            "type": "string",
            "format": ""
        },
        {
            "name": "correspondenceState",
            "baseName": "correspondenceState",
            "type": "string",
            "format": ""
        },
        {
            "name": "correspondenceZipCode",
            "baseName": "correspondenceZipCode",
            "type": "string",
            "format": ""
        },
        {
            "name": "countryCode",
            "baseName": "countryCode",
            "type": "string",
            "format": ""
        },
        {
            "name": "countryIP",
            "baseName": "countryIP",
            "type": "string",
            "format": ""
        },
        {
            "name": "countryOfBirth",
            "baseName": "countryOfBirth",
            "type": "string",
            "format": ""
        },
        {
            "name": "customerHashId",
            "baseName": "customerHashId",
            "type": "string",
            "format": "uuid"
        },
        {
            "name": "dateOfBirth",
            "baseName": "dateOfBirth",
            "type": "string",
            "format": ""
        },
        {
            "name": "deliveryAddress1",
            "baseName": "deliveryAddress1",
            "type": "string",
            "format": ""
        },
        {
            "name": "deliveryAddress2",
            "baseName": "deliveryAddress2",
            "type": "string",
            "format": ""
        },
        {
            "name": "deliveryCity",
            "baseName": "deliveryCity",
            "type": "string",
            "format": ""
        },
        {
            "name": "deliveryCountry",
            "baseName": "deliveryCountry",
            "type": "string",
            "format": ""
        },
        {
            "name": "deliveryLandmark",
            "baseName": "deliveryLandmark",
            "type": "string",
            "format": ""
        },
        {
            "name": "deliveryState",
            "baseName": "deliveryState",
            "type": "string",
            "format": ""
        },
        {
            "name": "deliveryZipCode",
            "baseName": "deliveryZipCode",
            "type": "string",
            "format": ""
        },
        {
            "name": "deviceInfo",
            "baseName": "deviceInfo",
            "type": "string",
            "format": ""
        },
        {
            "name": "email",
            "baseName": "email",
            "type": "string",
            "format": ""
        },
        {
            "name": "enableDocUpload",
            "baseName": "enableDocUpload",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "estimatedMonthlyFunding",
            "baseName": "estimatedMonthlyFunding",
            "type": "CustomerDataRequestDTOEstimatedMonthlyFundingEnum",
            "format": ""
        },
        {
            "name": "estimatedMonthlyFundingCurrency",
            "baseName": "estimatedMonthlyFundingCurrency",
            "type": "string",
            "format": ""
        },
        {
            "name": "expectedCountriesToSendReceiveFrom",
            "baseName": "expectedCountriesToSendReceiveFrom",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "firstName",
            "baseName": "firstName",
            "type": "string",
            "format": ""
        },
        {
            "name": "gender",
            "baseName": "gender",
            "type": "CustomerDataRequestDTOGenderEnum",
            "format": ""
        },
        {
            "name": "identificationDoc",
            "baseName": "identificationDoc",
            "type": "Array<ComplianceIdentificationDocDTO>",
            "format": ""
        },
        {
            "name": "intendedUseOfAccount",
            "baseName": "intendedUseOfAccount",
            "type": "CustomerDataRequestDTOIntendedUseOfAccountEnum",
            "format": ""
        },
        {
            "name": "internationalPaymentsSupported",
            "baseName": "internationalPaymentsSupported",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "ipAddress",
            "baseName": "ipAddress",
            "type": "string",
            "format": ""
        },
        {
            "name": "kyc",
            "baseName": "kyc",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "lastName",
            "baseName": "lastName",
            "type": "string",
            "format": ""
        },
        {
            "name": "middleName",
            "baseName": "middleName",
            "type": "string",
            "format": ""
        },
        {
            "name": "mobile",
            "baseName": "mobile",
            "type": "string",
            "format": ""
        },
        {
            "name": "nationality",
            "baseName": "nationality",
            "type": "string",
            "format": ""
        },
        {
            "name": "nativeLanguageName",
            "baseName": "nativeLanguageName",
            "type": "string",
            "format": ""
        },
        {
            "name": "occupation",
            "baseName": "occupation",
            "type": "CustomerDataRequestDTOOccupationEnum",
            "format": ""
        },
        {
            "name": "pep",
            "baseName": "pep",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "preferredName",
            "baseName": "preferredName",
            "type": "string",
            "format": ""
        },
        {
            "name": "segment",
            "baseName": "segment",
            "type": "string",
            "format": ""
        },
        {
            "name": "sessionId",
            "baseName": "sessionId",
            "type": "string",
            "format": ""
        },
        {
            "name": "taxDetails",
            "baseName": "taxDetails",
            "type": "Array<CustomerTaxDetailDTO>",
            "format": ""
        },
        {
            "name": "upgradeRequest",
            "baseName": "upgradeRequest",
            "type": "boolean",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return CustomerDataRequestDTO.attributeTypeMap;
    }

    public constructor() {
    }
}


export enum CustomerDataRequestDTOEstimatedMonthlyFundingEnum {
    _1000 = '<1000',
    _10005000 = '1000-5000',
    _500110000 = '5001-10000',
    _1000120000 = '10001-20000',
    _20000 = '>20000'
}
export enum CustomerDataRequestDTOGenderEnum {
    Male = 'Male',
    Female = 'Female',
    Others = 'Others'
}
export enum CustomerDataRequestDTOIntendedUseOfAccountEnum {
    ReceivingFromTransfersToAccountsIOwn = 'Receiving from/Transfers to accounts I own',
    ReceivingFromTransfersToFriendsOrFamily = 'Receiving from/Transfers to friends or family',
    PropertyGoodsOrServicesPayments = 'Property goods or services payments',
    EducationRelatedPayment = 'Education-related payment',
    Investments = 'Investments',
    ReceiveOrSendDonations = 'Receive or send donations',
    Saving = 'Saving',
    DayToDaySpending = 'Day-to-day spending',
    ReceivingASalary = 'Receiving a salary'
}
export enum CustomerDataRequestDTOOccupationEnum {
    Oc0001 = 'OC0001',
    Oc1001 = 'OC1001',
    Oc1002 = 'OC1002',
    Oc1003 = 'OC1003',
    Oc1110 = 'OC1110',
    Oc1120 = 'OC1120',
    Oc1201 = 'OC1201',
    Oc1210 = 'OC1210',
    Oc1211 = 'OC1211',
    Oc1220 = 'OC1220',
    Oc1310 = 'OC1310',
    Oc1311 = 'OC1311',
    Oc1320 = 'OC1320',
    Oc1410 = 'OC1410',
    Oc1411 = 'OC1411',
    Oc1420 = 'OC1420',
    Oc1430 = 'OC1430',
    Oc1440 = 'OC1440',
    Oc2001 = 'OC2001',
    Oc2110 = 'OC2110',
    Oc2111 = 'OC2111',
    Oc2112 = 'OC2112',
    Oc2120 = 'OC2120',
    Oc2121 = 'OC2121',
    Oc2122 = 'OC2122',
    Oc2123 = 'OC2123',
    Oc2130 = 'OC2130',
    Oc2131 = 'OC2131',
    Oc2132 = 'OC2132',
    Oc2133 = 'OC2133',
    Oc2139 = 'OC2139',
    Oc2210 = 'OC2210',
    Oc2211 = 'OC2211',
    Oc2221 = 'OC2221',
    Oc2222 = 'OC2222',
    Oc2223 = 'OC2223',
    Oc2230 = 'OC2230',
    Oc2231 = 'OC2231',
    Oc3001 = 'OC3001',
    Oc3110 = 'OC3110',
    Oc3111 = 'OC3111',
    Oc3112 = 'OC3112',
    Oc3120 = 'OC3120',
    Oc3130 = 'OC3130',
    Oc3210 = 'OC3210',
    Oc3211 = 'OC3211',
    Oc3212 = 'OC3212',
    Oc3220 = 'OC3220',
    Oc3310 = 'OC3310',
    Oc4001 = 'OC4001',
    Oc4002 = 'OC4002',
    Oc4003 = 'OC4003',
    Oc4004 = 'OC4004',
    Oc4110 = 'OC4110',
    Oc4120 = 'OC4120',
    Oc4121 = 'OC4121',
    Oc4122 = 'OC4122',
    Oc4130 = 'OC4130',
    Oc4131 = 'OC4131',
    Oc4132 = 'OC4132',
    Oc4140 = 'OC4140',
    Oc4210 = 'OC4210',
    Oc4220 = 'OC4220',
    Oc4310 = 'OC4310',
    Oc4320 = 'OC4320',
    Oc4410 = 'OC4410',
    Oc4420 = 'OC4420',
    Oc4510 = 'OC4510',
    Oc5001 = 'OC5001',
    Oc5110 = 'OC5110',
    Oc5111 = 'OC5111',
    Oc5112 = 'OC5112',
    Oc5210 = 'OC5210',
    Oc5211 = 'OC5211',
    Oc5212 = 'OC5212',
    Oc5310 = 'OC5310',
    Oc5311 = 'OC5311',
    Oc5312 = 'OC5312',
    Oc5320 = 'OC5320',
    Oc5410 = 'OC5410',
    Oc5510 = 'OC5510',
    Oc6001 = 'OC6001',
    Oc6002 = 'OC6002',
    Oc6003 = 'OC6003',
    Oc6004 = 'OC6004',
    Oc6201 = 'OC6201',
    Oc6202 = 'OC6202',
    Oc6210 = 'OC6210',
    Oc6220 = 'OC6220',
    Oc6310 = 'OC6310',
    Oc6320 = 'OC6320',
    Oc6321 = 'OC6321',
    Oc6322 = 'OC6322',
    Oc6410 = 'OC6410',
    Oc6420 = 'OC6420',
    Oc6430 = 'OC6430',
    Oc6431 = 'OC6431',
    Oc6432 = 'OC6432',
    Oc6440 = 'OC6440',
    Oc6441 = 'OC6441',
    Oc6510 = 'OC6510',
    Oc6520 = 'OC6520',
    Oc6521 = 'OC6521',
    Oc6522 = 'OC6522',
    Oc6531 = 'OC6531',
    Oc6532 = 'OC6532',
    Oc7001 = 'OC7001',
    Oc7002 = 'OC7002',
    Oc7201 = 'OC7201',
    Oc7202 = 'OC7202',
    Oc7210 = 'OC7210',
    Oc7220 = 'OC7220',
    Oc7230 = 'OC7230',
    Oc7231 = 'OC7231',
    Oc7232 = 'OC7232',
    Oc7240 = 'OC7240',
    Oc7241 = 'OC7241',
    Oc7242 = 'OC7242',
    Oc7250 = 'OC7250',
    Oc7260 = 'OC7260',
    Oc7299 = 'OC7299',
    Oc7310 = 'OC7310',
    Oc7311 = 'OC7311',
    Oc7320 = 'OC7320',
    Oc7330 = 'OC7330',
    Oc7331 = 'OC7331',
    Oc7340 = 'OC7340',
    Oc7410 = 'OC7410',
    Oc7420 = 'OC7420',
    Oc7510 = 'OC7510',
    Oc7511 = 'OC7511',
    Oc7520 = 'OC7520',
    Oc7521 = 'OC7521',
    Oc8001 = 'OC8001',
    Oc8002 = 'OC8002',
    Oc8201 = 'OC8201',
    Oc8202 = 'OC8202',
    Oc8203 = 'OC8203',
    Oc8310 = 'OC8310',
    Oc8311 = 'OC8311',
    Oc8312 = 'OC8312',
    Oc8410 = 'OC8410',
    Oc8411 = 'OC8411',
    Oc8412 = 'OC8412',
    Oc8510 = 'OC8510',
    Oc8511 = 'OC8511',
    Oc8512 = 'OC8512',
    Oc9001 = 'OC9001',
    Oc9201 = 'OC9201',
    Oc9202 = 'OC9202',
    Oc9210 = 'OC9210',
    Oc9310 = 'OC9310',
    Oc9320 = 'OC9320',
    Oc9410 = 'OC9410',
    Oc9411 = 'OC9411',
    Oc9412 = 'OC9412',
    Oc9413 = 'OC9413',
    Oc9414 = 'OC9414',
    Oc9415 = 'OC9415',
    Oc9420 = 'OC9420',
    Oc9421 = 'OC9421',
    Oc9510 = 'OC9510'
}

