/**
 * NIUM Platform
 * NIUM Platform
 *
 * OpenAPI spec version: 2023.12.12
 * Contact: experience@nium.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

export class RemitterRequestDTO {
    /**
    * This field accepts the Remitter\'s account type as INDIVIDUAL or CORPORATE
    */
    'accountType'?: RemitterRequestDTOAccountTypeEnum;
    /**
    * This field accepts address for Remitter\'s place of residence.
    */
    'address'?: string;
    /**
    * This field accepts the account number of the Remitter.
    */
    'bankAccountNumber'?: string;
    /**
    * This field accepts the city for Remitter\'s place of residence.
    */
    'city'?: string;
    /**
    * This field accepts the Remitter\'s contact number.
    */
    'contactNumber'?: string;
    /**
    * This field accepts the country of residence for the remitter.
    */
    'countryCode'?: string;
    /**
    * This field accepts Remitter\'s birth date.
    */
    'dob'?: string;
    /**
    * ID number of the selected identificationType.
    */
    'identificationNumber'?: string;
    /**
    * This field accepts the ID document type of the remitter e.g. Passport, National_ID etc..
    */
    'identificationType'?: string;
    /**
    * This field accepts industry type associated with the remitter.
    */
    'industryType'?: string;
    /**
    * This field accepts the name of the remitter.
    */
    'name'?: string;
    /**
    * This field accepts Remitter\'s nationality.
    */
    'nationality'?: string;
    /**
    * This field accepts the name of the financial institution where the request was initiated. This is typically applicable for requests that did not originate at the financial institution who is a direct Nium customer.
    */
    'originatingFIName'?: string;
    /**
    * This field accepts Remitter\'s place of birth.
    */
    'placeOfBirth'?: string;
    /**
    * This field accepts the postcode  for Remitter\'s place of residence.
    */
    'postcode'?: string;
    /**
    * This field accepts the state  for Remitter\'s place of residence.
    */
    'state'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "accountType",
            "baseName": "accountType",
            "type": "RemitterRequestDTOAccountTypeEnum",
            "format": ""
        },
        {
            "name": "address",
            "baseName": "address",
            "type": "string",
            "format": ""
        },
        {
            "name": "bankAccountNumber",
            "baseName": "bankAccountNumber",
            "type": "string",
            "format": ""
        },
        {
            "name": "city",
            "baseName": "city",
            "type": "string",
            "format": ""
        },
        {
            "name": "contactNumber",
            "baseName": "contactNumber",
            "type": "string",
            "format": ""
        },
        {
            "name": "countryCode",
            "baseName": "countryCode",
            "type": "string",
            "format": ""
        },
        {
            "name": "dob",
            "baseName": "dob",
            "type": "string",
            "format": ""
        },
        {
            "name": "identificationNumber",
            "baseName": "identificationNumber",
            "type": "string",
            "format": ""
        },
        {
            "name": "identificationType",
            "baseName": "identificationType",
            "type": "string",
            "format": ""
        },
        {
            "name": "industryType",
            "baseName": "industryType",
            "type": "string",
            "format": ""
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "nationality",
            "baseName": "nationality",
            "type": "string",
            "format": ""
        },
        {
            "name": "originatingFIName",
            "baseName": "originatingFIName",
            "type": "string",
            "format": ""
        },
        {
            "name": "placeOfBirth",
            "baseName": "placeOfBirth",
            "type": "string",
            "format": ""
        },
        {
            "name": "postcode",
            "baseName": "postcode",
            "type": "string",
            "format": ""
        },
        {
            "name": "state",
            "baseName": "state",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return RemitterRequestDTO.attributeTypeMap;
    }

    public constructor() {
    }
}


export enum RemitterRequestDTOAccountTypeEnum {
    Individual = 'INDIVIDUAL',
    Corporate = 'CORPORATE'
}

