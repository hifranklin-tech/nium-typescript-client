/**
 * NIUM Platform
 * NIUM Platform
 *
 * OpenAPI spec version: 2023.12.12
 * Contact: experience@nium.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { ConversionSchedule } from '../models/ConversionSchedule';
import { LockPeriod } from '../models/LockPeriod';
import { QuoteType } from '../models/QuoteType';
import { HttpFile } from '../http/http';

export class QuoteCreationResponse {
    /**
    * Unique identifier of the quote.
    */
    'id'?: string;
    /**
    * Exchange rate with markup to be used for the conversion.
    */
    'netExchangeRate'?: number;
    /**
    * Expiry time of the quote in UTC.
    */
    'expiryTime'?: Date;
    /**
    * 3-letter [ISO-4217 currency code](https://www.iso.org/iso-4217-currency-codes.html) for the source amount.
    */
    'sourceCurrencyCode'?: string;
    /**
    * 3-letter [ISO-4217 currency code](https://www.iso.org/iso-4217-currency-codes.html) for the destination amount.
    */
    'destinationCurrencyCode'?: string;
    'quoteType'?: QuoteType;
    'conversionSchedule'?: ConversionSchedule;
    'lockPeriod'?: LockPeriod;
    /**
    * Foreign exchange market rate for the currency pair, used as the benchmark for quote calculation.
    */
    'exchangeRate'?: number;
    /**
    * Markup rate applied to the exchange rate for the conversion by Nium.
    */
    'markupRate'?: number;
    /**
    * Europe Central Bank\'s exchange rate for this currency pair, provided only for EU and UK.
    */
    'ecbExchangeRate'?: number;
    /**
    * Time in UTC at which exchange rate was obtained from the rate provider
    */
    'rateCaptureTime'?: Date;
    /**
    * The source amount to be converted to the destination currency. This value is for reference only and will not be used as the actual conversion amount.
    */
    'sourceAmount'?: number;
    /**
    * The amount needed in the destination currency. This value is for reference only and will not be used as the actual conversion amount.
    */
    'destinationAmount'?: number;
    /**
    * The amount charged in the destination currency as the markup for the conversion.
    */
    'destinationMarkupAmount'?: number;
    /**
    * Time of creation in UTC.
    */
    'createdTime'?: Date;
    /**
    * Indicates whether the exchange rate provided is stale. A value of \"true\" suggests that the exchange rate information is no longer current. Clients can use this flag to make informed decisions based on the freshness of the exchange rate.
    */
    'isRateStale'?: boolean;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        {
            "name": "netExchangeRate",
            "baseName": "netExchangeRate",
            "type": "number",
            "format": "double"
        },
        {
            "name": "expiryTime",
            "baseName": "expiryTime",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "sourceCurrencyCode",
            "baseName": "sourceCurrencyCode",
            "type": "string",
            "format": ""
        },
        {
            "name": "destinationCurrencyCode",
            "baseName": "destinationCurrencyCode",
            "type": "string",
            "format": ""
        },
        {
            "name": "quoteType",
            "baseName": "quoteType",
            "type": "QuoteType",
            "format": ""
        },
        {
            "name": "conversionSchedule",
            "baseName": "conversionSchedule",
            "type": "ConversionSchedule",
            "format": ""
        },
        {
            "name": "lockPeriod",
            "baseName": "lockPeriod",
            "type": "LockPeriod",
            "format": ""
        },
        {
            "name": "exchangeRate",
            "baseName": "exchangeRate",
            "type": "number",
            "format": "double"
        },
        {
            "name": "markupRate",
            "baseName": "markupRate",
            "type": "number",
            "format": "double"
        },
        {
            "name": "ecbExchangeRate",
            "baseName": "ecbExchangeRate",
            "type": "number",
            "format": "double"
        },
        {
            "name": "rateCaptureTime",
            "baseName": "rateCaptureTime",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "sourceAmount",
            "baseName": "sourceAmount",
            "type": "number",
            "format": "double"
        },
        {
            "name": "destinationAmount",
            "baseName": "destinationAmount",
            "type": "number",
            "format": "double"
        },
        {
            "name": "destinationMarkupAmount",
            "baseName": "destinationMarkupAmount",
            "type": "number",
            "format": "double"
        },
        {
            "name": "createdTime",
            "baseName": "createdTime",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "isRateStale",
            "baseName": "isRateStale",
            "type": "boolean",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return QuoteCreationResponse.attributeTypeMap;
    }

    public constructor() {
    }
}



