/**
 * NIUM Platform
 * NIUM Platform
 *
 * OpenAPI spec version: 2023.12.12
 * Contact: experience@nium.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

export class BankAccountDetails {
    /**
    * Name of the beneficiary for the bank account.
    */
    'accountName'?: string;
    /**
    * The bank account number.
    */
    'accountNumber'?: string;
    /**
    * Name of the bank.
    */
    'bankName'?: string;
    /**
    * The currency in which the auto sweep has to occur.
    */
    'currency'?: string;
    /**
    * The routing type of the bank account.
    */
    'routingType'?: string;
    /**
    * The routing value of the bank account.
    */
    'routingValue'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "accountName",
            "baseName": "accountName",
            "type": "string",
            "format": ""
        },
        {
            "name": "accountNumber",
            "baseName": "accountNumber",
            "type": "string",
            "format": ""
        },
        {
            "name": "bankName",
            "baseName": "bankName",
            "type": "string",
            "format": ""
        },
        {
            "name": "currency",
            "baseName": "currency",
            "type": "string",
            "format": ""
        },
        {
            "name": "routingType",
            "baseName": "routingType",
            "type": "string",
            "format": ""
        },
        {
            "name": "routingValue",
            "baseName": "routingValue",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return BankAccountDetails.attributeTypeMap;
    }

    public constructor() {
    }
}

