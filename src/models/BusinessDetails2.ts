/**
 * NIUM Platform
 * NIUM Platform
 *
 * OpenAPI spec version: 2023.12.12
 * Contact: experience@nium.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Addresses } from '../models/Addresses';
import { ApplicantDetails2 } from '../models/ApplicantDetails2';
import { LegalDetails } from '../models/LegalDetails';
import { OnboardingDetails } from '../models/OnboardingDetails';
import { ProductAssociationDetails } from '../models/ProductAssociationDetails';
import { ProductDocumentDetail } from '../models/ProductDocumentDetail';
import { ProductPartnershipDetails } from '../models/ProductPartnershipDetails';
import { ProductRegulatoryDetails } from '../models/ProductRegulatoryDetails';
import { ProductTaxDetails } from '../models/ProductTaxDetails';
import { RevenueInfo } from '../models/RevenueInfo';
import { Stakeholders2 } from '../models/Stakeholders2';
import { HttpFile } from '../http/http';

/**
* This object accepts the business information of the corporate entity.
*/
export class BusinessDetails2 {
    /**
    * This object accepts additional information about the business.
    */
    'additionalInfo'?: { [key: string]: string; };
    'addresses'?: Addresses;
    'applicantDetails'?: ApplicantDetails2;
    'associationDetails'?: ProductAssociationDetails;
    'businessInOtherCountries'?: Array<any>;
    /**
    * This field accepts the registered business name of the corporate entity.
    */
    'businessName'?: string;
    /**
    * This field accepts the business registration number of the corporate entity.
    */
    'businessRegistrationNumber'?: string;
    /**
    * This field accepts the legal entity type of the business.
    */
    'businessType'?: string;
    'description'?: string;
    'documentDetails'?: ProductDocumentDetail;
    'legalDetails'?: LegalDetails;
    'onboardingDetails'?: OnboardingDetails;
    'partnershipDetails'?: ProductPartnershipDetails;
    'purposeCode'?: string;
    /**
    * This field accepts the reference Id of the business information for which the RFI is raised.
    */
    'referenceId'?: string;
    'regulatoryDetails'?: ProductRegulatoryDetails;
    'revenueInfo'?: RevenueInfo;
    /**
    * This field accepts the settlor name.
    */
    'settlorName'?: string;
    /**
    * This array accepts the stakeholders for the new corporate entity to be onboarded. For every stakeholder object, you need to send either the `stakeholderDetails` or the `businessPartner` objects.
    */
    'stakeholders'?: Array<Stakeholders2>;
    'taxDetails'?: Array<ProductTaxDetails>;
    'ticker'?: string;
    /**
    * This field accepts the Trading Name also known as Doing Business As(DBA) name.
    */
    'tradeName'?: string;
    /**
    * This field accepts the full business name of the trustee in case the entity type is a trust.
    */
    'trusteeName'?: string;
    'website'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "additionalInfo",
            "baseName": "additionalInfo",
            "type": "{ [key: string]: string; }",
            "format": ""
        },
        {
            "name": "addresses",
            "baseName": "addresses",
            "type": "Addresses",
            "format": ""
        },
        {
            "name": "applicantDetails",
            "baseName": "applicantDetails",
            "type": "ApplicantDetails2",
            "format": ""
        },
        {
            "name": "associationDetails",
            "baseName": "associationDetails",
            "type": "ProductAssociationDetails",
            "format": ""
        },
        {
            "name": "businessInOtherCountries",
            "baseName": "businessInOtherCountries",
            "type": "Array<any>",
            "format": ""
        },
        {
            "name": "businessName",
            "baseName": "businessName",
            "type": "string",
            "format": ""
        },
        {
            "name": "businessRegistrationNumber",
            "baseName": "businessRegistrationNumber",
            "type": "string",
            "format": ""
        },
        {
            "name": "businessType",
            "baseName": "businessType",
            "type": "string",
            "format": ""
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string",
            "format": ""
        },
        {
            "name": "documentDetails",
            "baseName": "documentDetails",
            "type": "ProductDocumentDetail",
            "format": ""
        },
        {
            "name": "legalDetails",
            "baseName": "legalDetails",
            "type": "LegalDetails",
            "format": ""
        },
        {
            "name": "onboardingDetails",
            "baseName": "onboardingDetails",
            "type": "OnboardingDetails",
            "format": ""
        },
        {
            "name": "partnershipDetails",
            "baseName": "partnershipDetails",
            "type": "ProductPartnershipDetails",
            "format": ""
        },
        {
            "name": "purposeCode",
            "baseName": "purposeCode",
            "type": "string",
            "format": ""
        },
        {
            "name": "referenceId",
            "baseName": "referenceId",
            "type": "string",
            "format": ""
        },
        {
            "name": "regulatoryDetails",
            "baseName": "regulatoryDetails",
            "type": "ProductRegulatoryDetails",
            "format": ""
        },
        {
            "name": "revenueInfo",
            "baseName": "revenueInfo",
            "type": "RevenueInfo",
            "format": ""
        },
        {
            "name": "settlorName",
            "baseName": "settlorName",
            "type": "string",
            "format": ""
        },
        {
            "name": "stakeholders",
            "baseName": "stakeholders",
            "type": "Array<Stakeholders2>",
            "format": ""
        },
        {
            "name": "taxDetails",
            "baseName": "taxDetails",
            "type": "Array<ProductTaxDetails>",
            "format": ""
        },
        {
            "name": "ticker",
            "baseName": "ticker",
            "type": "string",
            "format": ""
        },
        {
            "name": "tradeName",
            "baseName": "tradeName",
            "type": "string",
            "format": ""
        },
        {
            "name": "trusteeName",
            "baseName": "trusteeName",
            "type": "string",
            "format": ""
        },
        {
            "name": "website",
            "baseName": "website",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return BusinessDetails2.attributeTypeMap;
    }

    public constructor() {
    }
}

