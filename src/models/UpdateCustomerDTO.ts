/**
 * NIUM Platform
 * NIUM Platform
 *
 * OpenAPI spec version: 2023.12.12
 * Contact: experience@nium.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

export class UpdateCustomerDTO {
    'additionalInfo'?: { [key: string]: string; };
    /**
    * This field accepts the authentication code generated as part of SCA (Strong Customer Authentication). Note: : Authentication code must be passed if regulatory region of the program is UK or EU. This field does not accept a value for any other region.
    */
    'authenticationCode'?: string;
    /**
    * Billing address line one of a customer.
    */
    'billingAddress1'?: string;
    /**
    * Billing address line two of a customer.
    */
    'billingAddress2'?: string;
    'billingAddressId'?: string;
    /**
    * Billing address city name.
    */
    'billingCity'?: string;
    /**
    * This field accepts the 2-letter [ISO Alpha-2 country code](doc:currency-and-country-codes) denoting the country of customer’s billing address. It is important to pass this field if the card to be issued is to be used for GooglePay or ApplePay provisioning.
    */
    'billingCountry'?: string;
    /**
    * Billing landmark address field.
    */
    'billingLandmark'?: string;
    /**
    * Billing address state name.
    */
    'billingState'?: string;
    /**
    * Billing address ZIP code.
    */
    'billingZipCode'?: string;
    'blockType'?: string;
    /**
    * Line one of the customer\'s correspondence address.
    */
    'correspondenceAddress1'?: string;
    /**
    * Line two of the customer\'s correspondence address.
    */
    'correspondenceAddress2'?: string;
    'correspondenceAddressId'?: string;
    /**
    * Correspondence address city name.
    */
    'correspondenceCity'?: string;
    /**
    * This field accepts the 2-letter [ISO Alpha-2 country code](doc:currency-and-country-codes) denoting the country of customer’s correspondence address.
    */
    'correspondenceCountry'?: string;
    /**
    * Correspondence landmark address field.
    */
    'correspondenceLandmark'?: string;
    /**
    * Correspondence address state name.
    */
    'correspondenceState'?: string;
    /**
    * Correspondence postal/ZIP code of a customer.
    */
    'correspondenceZipCode'?: string;
    /**
    * This field contains the 2-letter [ISO Alpha-2 country code](doc:currency-and-country-codes) for identifying the country prefix to a mobile number.
    */
    'countryCode'?: string;
    /**
    * The country IP for the device by the customer for initiating the request.
    */
    'countryIP'?: string;
    /**
    * Unique customer identifier generated on customer creation.
    */
    'customerHashId'?: string;
    /**
    * Line one of the address where the customer would like to receive a card.
    */
    'deliveryAddress1'?: string;
    /**
    * Line two of the customer\'s delivery address.
    */
    'deliveryAddress2'?: string;
    'deliveryAddressId'?: string;
    /**
    * Customer\'s city name.
    */
    'deliveryCity'?: string;
    /**
    * This field accepts the 2-letter [ISO Alpha-2 country code](doc:currency-and-country-codes) denoting the country of customer\'s delivery address.
    */
    'deliveryCountry'?: string;
    /**
    * delivery landmark address field.
    */
    'deliveryLandmark'?: string;
    /**
    * Customer\'s state name.
    */
    'deliveryState'?: string;
    /**
    * Customer\'s ZIP code.
    */
    'deliveryZipCode'?: string;
    /**
    * The OS of the device used by the customer for initiating the request.
    */
    'deviceInfo'?: string;
    /**
    * Customer\'s email address
    */
    'email'?: string;
    /**
    * This field accepts the employee Id for the customer, in case of a corporate program.
    */
    'employeeId'?: string;
    /**
    * The IP address of the device used by the customer for initiating the request.
    */
    'ipAddress'?: string;
    /**
    * Mobile number to be updated.
    */
    'mobile'?: string;
    /**
    * This field contains the customer\'s name in native language. Maximum character limit: 40
    */
    'nativeLanguageName'?: string;
    /**
    * This is the fee segment associated with a client. Maximum character limit: 64
    */
    'segment'?: string;
    /**
    * The session Id for the session of the customer for initiating the request.
    */
    'sessionId'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "additionalInfo",
            "baseName": "additionalInfo",
            "type": "{ [key: string]: string; }",
            "format": ""
        },
        {
            "name": "authenticationCode",
            "baseName": "authenticationCode",
            "type": "string",
            "format": ""
        },
        {
            "name": "billingAddress1",
            "baseName": "billingAddress1",
            "type": "string",
            "format": ""
        },
        {
            "name": "billingAddress2",
            "baseName": "billingAddress2",
            "type": "string",
            "format": ""
        },
        {
            "name": "billingAddressId",
            "baseName": "billingAddressId",
            "type": "string",
            "format": ""
        },
        {
            "name": "billingCity",
            "baseName": "billingCity",
            "type": "string",
            "format": ""
        },
        {
            "name": "billingCountry",
            "baseName": "billingCountry",
            "type": "string",
            "format": ""
        },
        {
            "name": "billingLandmark",
            "baseName": "billingLandmark",
            "type": "string",
            "format": ""
        },
        {
            "name": "billingState",
            "baseName": "billingState",
            "type": "string",
            "format": ""
        },
        {
            "name": "billingZipCode",
            "baseName": "billingZipCode",
            "type": "string",
            "format": ""
        },
        {
            "name": "blockType",
            "baseName": "blockType",
            "type": "string",
            "format": ""
        },
        {
            "name": "correspondenceAddress1",
            "baseName": "correspondenceAddress1",
            "type": "string",
            "format": ""
        },
        {
            "name": "correspondenceAddress2",
            "baseName": "correspondenceAddress2",
            "type": "string",
            "format": ""
        },
        {
            "name": "correspondenceAddressId",
            "baseName": "correspondenceAddressId",
            "type": "string",
            "format": ""
        },
        {
            "name": "correspondenceCity",
            "baseName": "correspondenceCity",
            "type": "string",
            "format": ""
        },
        {
            "name": "correspondenceCountry",
            "baseName": "correspondenceCountry",
            "type": "string",
            "format": ""
        },
        {
            "name": "correspondenceLandmark",
            "baseName": "correspondenceLandmark",
            "type": "string",
            "format": ""
        },
        {
            "name": "correspondenceState",
            "baseName": "correspondenceState",
            "type": "string",
            "format": ""
        },
        {
            "name": "correspondenceZipCode",
            "baseName": "correspondenceZipCode",
            "type": "string",
            "format": ""
        },
        {
            "name": "countryCode",
            "baseName": "countryCode",
            "type": "string",
            "format": ""
        },
        {
            "name": "countryIP",
            "baseName": "countryIP",
            "type": "string",
            "format": ""
        },
        {
            "name": "customerHashId",
            "baseName": "customerHashId",
            "type": "string",
            "format": ""
        },
        {
            "name": "deliveryAddress1",
            "baseName": "deliveryAddress1",
            "type": "string",
            "format": ""
        },
        {
            "name": "deliveryAddress2",
            "baseName": "deliveryAddress2",
            "type": "string",
            "format": ""
        },
        {
            "name": "deliveryAddressId",
            "baseName": "deliveryAddressId",
            "type": "string",
            "format": ""
        },
        {
            "name": "deliveryCity",
            "baseName": "deliveryCity",
            "type": "string",
            "format": ""
        },
        {
            "name": "deliveryCountry",
            "baseName": "deliveryCountry",
            "type": "string",
            "format": ""
        },
        {
            "name": "deliveryLandmark",
            "baseName": "deliveryLandmark",
            "type": "string",
            "format": ""
        },
        {
            "name": "deliveryState",
            "baseName": "deliveryState",
            "type": "string",
            "format": ""
        },
        {
            "name": "deliveryZipCode",
            "baseName": "deliveryZipCode",
            "type": "string",
            "format": ""
        },
        {
            "name": "deviceInfo",
            "baseName": "deviceInfo",
            "type": "string",
            "format": ""
        },
        {
            "name": "email",
            "baseName": "email",
            "type": "string",
            "format": ""
        },
        {
            "name": "employeeId",
            "baseName": "employeeId",
            "type": "string",
            "format": ""
        },
        {
            "name": "ipAddress",
            "baseName": "ipAddress",
            "type": "string",
            "format": ""
        },
        {
            "name": "mobile",
            "baseName": "mobile",
            "type": "string",
            "format": ""
        },
        {
            "name": "nativeLanguageName",
            "baseName": "nativeLanguageName",
            "type": "string",
            "format": ""
        },
        {
            "name": "segment",
            "baseName": "segment",
            "type": "string",
            "format": ""
        },
        {
            "name": "sessionId",
            "baseName": "sessionId",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return UpdateCustomerDTO.attributeTypeMap;
    }

    public constructor() {
    }
}

