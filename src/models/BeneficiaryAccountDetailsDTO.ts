/**
 * NIUM Platform
 * NIUM Platform
 *
 * OpenAPI spec version: 2023.12.12
 * Contact: experience@nium.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

export class BeneficiaryAccountDetailsDTO {
    /**
    * This field accepts the bank account type of the beneficiary.
    */
    'accountType'?: BeneficiaryAccountDetailsDTOAccountTypeEnum;
    /**
    * This field accepts an address of the beneficiary.
    */
    'address'?: string;
    'alias'?: string;
    /**
    * This field accepts the city of the beneficiary.
    */
    'city'?: string;
    /**
    * This field accepts the mobile number of the beneficiary.
    */
    'contactNumber'?: string;
    /**
    * This field accepts the [ISO-2 country code](https://docs.nium.com/apis/docs/currency-and-country-codes) for the mobile number of beneficiary.
    */
    'countryCode'?: string;
    /**
    * This field accepts an email of the beneficiary.
    */
    'email'?: string;
    /**
    * This field accepts the name of a beneficiary.
    */
    'name'?: string;
    /**
    * This field accepts an postcode of the beneficiary.
    */
    'postcode'?: string;
    /**
    * This field accepts the relationship of the beneficiary with the remitter.
    */
    'remitterBeneficiaryRelationship'?: string;
    /**
    * This field accepts the state of the beneficiary.
    */
    'state'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "accountType",
            "baseName": "accountType",
            "type": "BeneficiaryAccountDetailsDTOAccountTypeEnum",
            "format": ""
        },
        {
            "name": "address",
            "baseName": "address",
            "type": "string",
            "format": ""
        },
        {
            "name": "alias",
            "baseName": "alias",
            "type": "string",
            "format": ""
        },
        {
            "name": "city",
            "baseName": "city",
            "type": "string",
            "format": ""
        },
        {
            "name": "contactNumber",
            "baseName": "contactNumber",
            "type": "string",
            "format": ""
        },
        {
            "name": "countryCode",
            "baseName": "countryCode",
            "type": "string",
            "format": ""
        },
        {
            "name": "email",
            "baseName": "email",
            "type": "string",
            "format": ""
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "postcode",
            "baseName": "postcode",
            "type": "string",
            "format": ""
        },
        {
            "name": "remitterBeneficiaryRelationship",
            "baseName": "remitterBeneficiaryRelationship",
            "type": "string",
            "format": ""
        },
        {
            "name": "state",
            "baseName": "state",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return BeneficiaryAccountDetailsDTO.attributeTypeMap;
    }

    public constructor() {
    }
}


export enum BeneficiaryAccountDetailsDTOAccountTypeEnum {
    Individual = 'INDIVIDUAL',
    Corporate = 'CORPORATE'
}

