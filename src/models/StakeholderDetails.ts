/**
 * NIUM Platform
 * NIUM Platform
 *
 * OpenAPI spec version: 2023.12.12
 * Contact: experience@nium.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { ContactDetails } from '../models/ContactDetails';
import { ProductAddress } from '../models/ProductAddress';
import { ProductDocumentDetail } from '../models/ProductDocumentDetail';
import { ProductProfessionalDetails } from '../models/ProductProfessionalDetails';
import { ProductTaxDetails } from '../models/ProductTaxDetails';
import { HttpFile } from '../http/http';

export class StakeholderDetails {
    'additionalInfo'?: { [key: string]: string; };
    'address'?: ProductAddress;
    /**
    * This field accepts the birth country name of the stakeholder.  AU: NA EU: Required UK: NA SG: NA
    */
    'birthCountry'?: string;
    'contactDetails'?: ContactDetails;
    /**
    * This field accepts the date of birth of the stakeholder in yyyy-MM-dd format.  AU: Optional EU: Required UK: Required SG: Required
    */
    'dateOfBirth'?: string;
    /**
    * This array accepts the document details for the stakeholder. This field is required only if the documents are being uploaded.  AU: Optional EU: Conditional UK: Optional SG: Optional
    */
    'documentDetails'?: Array<ProductDocumentDetail>;
    /**
    * This field contains the first name of the stakeholder.  AU: Optional EU: Required UK: Required SG: Required
    */
    'firstName'?: string;
    /**
    * This field accepts the gender of the stakeholder. The acceptable values are: Male Female  AU: Optional EU: NA UK: NA SG: NA
    */
    'gender'?: string;
    /**
    * This object accepts the desired mode to do the KYC of the individual stakeholder.  AU: Optional EU: Required UK: Required SG: Required
    */
    'kycMode'?: string;
    /**
    * This field contains the last name of the stakeholder.  AU: Optional EU: Required UK: Required SG: Required
    */
    'lastName'?: string;
    /**
    * This field contains the middle name of the stakeholder.  AU: Optional EU: Optional UK: Optional SG: Optional
    */
    'middleName'?: string;
    /**
    * This field accepts the 2-letter [ISO Alpha-2 country code](https://nium-documents.s3-eu-west-1.amazonaws.com/spend-documents/Country+Code.pdf) for the nationality of the stakeholder.  AU: Optional EU: Required UK: Required SG: Required
    */
    'nationality'?: string;
    /**
    * This array accepts the professional details of the stakeholder.  AU: Optional EU: Required UK: Required SG: Required
    */
    'professionalDetails'?: Array<ProductProfessionalDetails>;
    /**
    * This array accepts the tax details.  AU: NA EU: Required UK: NA SG: NA
    */
    'taxDetails'?: Array<ProductTaxDetails>;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "additionalInfo",
            "baseName": "additionalInfo",
            "type": "{ [key: string]: string; }",
            "format": ""
        },
        {
            "name": "address",
            "baseName": "address",
            "type": "ProductAddress",
            "format": ""
        },
        {
            "name": "birthCountry",
            "baseName": "birthCountry",
            "type": "string",
            "format": ""
        },
        {
            "name": "contactDetails",
            "baseName": "contactDetails",
            "type": "ContactDetails",
            "format": ""
        },
        {
            "name": "dateOfBirth",
            "baseName": "dateOfBirth",
            "type": "string",
            "format": ""
        },
        {
            "name": "documentDetails",
            "baseName": "documentDetails",
            "type": "Array<ProductDocumentDetail>",
            "format": ""
        },
        {
            "name": "firstName",
            "baseName": "firstName",
            "type": "string",
            "format": ""
        },
        {
            "name": "gender",
            "baseName": "gender",
            "type": "string",
            "format": ""
        },
        {
            "name": "kycMode",
            "baseName": "kycMode",
            "type": "string",
            "format": ""
        },
        {
            "name": "lastName",
            "baseName": "lastName",
            "type": "string",
            "format": ""
        },
        {
            "name": "middleName",
            "baseName": "middleName",
            "type": "string",
            "format": ""
        },
        {
            "name": "nationality",
            "baseName": "nationality",
            "type": "string",
            "format": ""
        },
        {
            "name": "professionalDetails",
            "baseName": "professionalDetails",
            "type": "Array<ProductProfessionalDetails>",
            "format": ""
        },
        {
            "name": "taxDetails",
            "baseName": "taxDetails",
            "type": "Array<ProductTaxDetails>",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return StakeholderDetails.attributeTypeMap;
    }

    public constructor() {
    }
}

