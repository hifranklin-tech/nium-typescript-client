/**
 * NIUM Platform
 * NIUM Platform
 *
 * OpenAPI spec version: 2023.12.12
 * Contact: experience@nium.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

export class ReferenceRateResponseDto {
    /**
    * This field contains the date on which fx rate has to be calculated. The timezone is UTC +00.
    */
    'asOfDate'?: string;
    /**
    * This field contains the card scheme provider name.
    */
    'cardScheme'?: string;
    /**
    * This is the fx rate from cards scheme.
    */
    'cardSchemeFxRate'?: number;
    /**
    * Last updated timestamp of card scheme fx rate. The timezone is UTC +00.
    */
    'cardSchemeFxRateLastUpdatedAt'?: string;
    /**
    * This is the cards scheme fx rate with fx markup.
    */
    'cardSchemeFxRateWithFxMarkup'?: number;
    /**
    * The markup rate over ecb rate. Available for currencies listed in [Euro foreign exchange reference rates](https://www.ecb.europa.eu/stats/policy_and_exchange_rates/euro_reference_exchange_rates/html/index.en.html)
    */
    'cardSchemeMarkupOverEcb'?: number;
    /**
    * The ecb exchange rate fetched for the conversion. Available for currencies listed in [Euro foreign exchange reference rates](https://www.ecb.europa.eu/stats/policy_and_exchange_rates/euro_reference_exchange_rates/html/index.en.html)
    */
    'ecbRate'?: number;
    /**
    * Last updated timestamp of ecb rate. The timezone is UTC +00. Available for currencies listed in [Euro foreign exchange reference rates](https://www.ecb.europa.eu/stats/policy_and_exchange_rates/euro_reference_exchange_rates/html/index.en.html)
    */
    'ecbRateLastUpdatedAt'?: string;
    /**
    * An amount to be converted.
    */
    'fromAmount'?: number;
    /**
    * This field contains the 3-letter [ISO-4217 currency code](https://www.iso.org/iso-4217-currency-codes.html) for the source amount.
    */
    'fromCurrency'?: string;
    /**
    * This is the fx markup rate.
    */
    'fxMarkup'?: number;
    /**
    * The ecb exchange rate with to amount.
    */
    'toAmountWithEcbRate'?: number;
    /**
    * The amount with transaction fee and fx markup rate.
    */
    'toAmountWithTransactionFeeAndFxMarkup'?: number;
    /**
    * This field contains the 3-letter [ISO-4217 currency code](https://www.iso.org/iso-4217-currency-codes.html) for the destination amount.
    */
    'toCurrency'?: string;
    /**
    * This is the transaction fee.
    */
    'transactionFee'?: number;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "asOfDate",
            "baseName": "asOfDate",
            "type": "string",
            "format": ""
        },
        {
            "name": "cardScheme",
            "baseName": "cardScheme",
            "type": "string",
            "format": ""
        },
        {
            "name": "cardSchemeFxRate",
            "baseName": "cardSchemeFxRate",
            "type": "number",
            "format": "double"
        },
        {
            "name": "cardSchemeFxRateLastUpdatedAt",
            "baseName": "cardSchemeFxRateLastUpdatedAt",
            "type": "string",
            "format": ""
        },
        {
            "name": "cardSchemeFxRateWithFxMarkup",
            "baseName": "cardSchemeFxRateWithFxMarkup",
            "type": "number",
            "format": "double"
        },
        {
            "name": "cardSchemeMarkupOverEcb",
            "baseName": "cardSchemeMarkupOverEcb",
            "type": "number",
            "format": "double"
        },
        {
            "name": "ecbRate",
            "baseName": "ecbRate",
            "type": "number",
            "format": "double"
        },
        {
            "name": "ecbRateLastUpdatedAt",
            "baseName": "ecbRateLastUpdatedAt",
            "type": "string",
            "format": ""
        },
        {
            "name": "fromAmount",
            "baseName": "fromAmount",
            "type": "number",
            "format": "double"
        },
        {
            "name": "fromCurrency",
            "baseName": "fromCurrency",
            "type": "string",
            "format": ""
        },
        {
            "name": "fxMarkup",
            "baseName": "fxMarkup",
            "type": "number",
            "format": "double"
        },
        {
            "name": "toAmountWithEcbRate",
            "baseName": "toAmountWithEcbRate",
            "type": "number",
            "format": "double"
        },
        {
            "name": "toAmountWithTransactionFeeAndFxMarkup",
            "baseName": "toAmountWithTransactionFeeAndFxMarkup",
            "type": "number",
            "format": "double"
        },
        {
            "name": "toCurrency",
            "baseName": "toCurrency",
            "type": "string",
            "format": ""
        },
        {
            "name": "transactionFee",
            "baseName": "transactionFee",
            "type": "number",
            "format": "double"
        }    ];

    static getAttributeTypeMap() {
        return ReferenceRateResponseDto.attributeTypeMap;
    }

    public constructor() {
    }
}

