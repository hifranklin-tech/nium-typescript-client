/**
 * NIUM Platform
 * NIUM Platform
 *
 * OpenAPI spec version: 2023.12.12
 * Contact: experience@nium.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

/**
* A card can be replaced using the Replace Card API only if it is permanently blocked. A permanently blocked card cannot be replaced on the same date as date of issuance. For example, a customer issued a card today and request to block the card permanently, on the same day. However, a customer may not call the Replace Card API to issue a replacement on the same date.
*/
export class ReplaceCardRequest {
    /**
    * The expiry date is applicable only for Virtual cards and not applicable for physical cards. This field is in MMYY format. For Virtual cards, the expiry date can be a maximum of 5 years from when the API is used.
    */
    'cardExpiry'?: string;
    /**
    * This field accepts 3-letter [ISO-4217 currency code](doc:currency-and-country-codes) in which the client wants to levy the card issuance fee.
    */
    'cardFeeCurrencyCode': string;
    'plasticId'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "cardExpiry",
            "baseName": "cardExpiry",
            "type": "string",
            "format": ""
        },
        {
            "name": "cardFeeCurrencyCode",
            "baseName": "cardFeeCurrencyCode",
            "type": "string",
            "format": ""
        },
        {
            "name": "plasticId",
            "baseName": "plasticId",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return ReplaceCardRequest.attributeTypeMap;
    }

    public constructor() {
    }
}

